{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./filter.js","webpack:///./filters sync ^\\.\\/.*$","webpack:///./filters/are.js","webpack:///./filters/default.js","webpack:///./filters/email.js","webpack:///./filters/enum.js","webpack:///./filters/exists.js","webpack:///./filters/notEmpty.js","webpack:///./filters/notExists.js","webpack:///./filters/required.js","webpack:///./filters/requiredIf.js","webpack:///./filters/unique.js","webpack:///./observers/actorable.js","webpack:///./schemas/nfield.js","webpack:///./schemas/nstring.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,cAAc;AACzD;;AAEA;;AAEA;AACA;AACA,sBAAsB,2DAAQ,IAAY,KAAK,CAAC;AAChD,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,gCAAgC,GAAG,cAAc,cAAc,GAAG,oBAAoB;AACtF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;AC1CA;AACA,wCAAwC,kBAAkB,OAAO,EAAE;AACnE;AACA;AACA;;AAEA,iCAAiC,KAAK,kBAAkB,OAAO;;AAE/D;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,UAAU;AACxE;AACA,KAAK;AACL,qDAAqD,UAAU;AAC/D,+BAA+B,KAAK,0BAA0B,OAAO;AACrE;;AAEA;AACA;AACA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACRA;AACA,kCAAkC,SAAS,OAAO,EAAE;AACpD;AACA;AACA;;AAEA;;AAEA,iCAAiC,KAAK;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA,kCAAkC,SAAS,OAAO,EAAE;AACpD;AACA;AACA;;AAEA;AACA,+BAA+B,KAAK;AACpC;;AAEA;AACA;AACA;;;;;;;;;;;;ACZA;AACA,iCAAiC,kBAAkB,OAAO,EAAE;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,KAAK;AACpC;;AAEA;AACA;AACA;;;;;;;;;;;;ACfA;AACA,2BAA2B,SAAS,OAAO,EAAE;AAC7C;AACA,+BAA+B,KAAK;AACpC;;AAEA;AACA;AACA;;;;;;;;;;;;ACRA;AACA,iCAAiC,uBAAuB,OAAO,EAAE;AACjE;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,+BAA+B,KAAK,qBAAqB,OAAO;AAChE;;AAEA;AACA;AACA;;;;;;;;;;;;ACdA;AACA,kCAAkC,SAAS,mBAAmB,EAAE;AAChE;AACA,+BAA+B,KAAK;AACpC;;AAEA;AACA;AACA;;;;;;;;;;;;ACRA;AACA,kCAAkC,uBAAuB,mBAAmB,EAAE;AAC9E;AACA,+BAA+B,KAAK;AACpC;;AAEA;AACA;AACA;;;;;;;;;;;;ACRA;AACA,iCAAiC,+BAA+B,OAAO,EAAE;AACzE;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,+BAA+B,KAAK;AACpC;;AAEA;AACA;AACA;;;;;;;;;;;;ACdA,gBAAgB,mBAAO,CAAC,gDAAoB;;AAE5C;AACA;AACA;AACA;AACA;AACA,GAAG,KAAK;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,QAAQ;AACjB;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,SAAS,QAAQ;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/CA,eAAe,mBAAO,CAAC,8BAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,8BAA8B;AACtF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpFA,eAAe,mBAAO,CAAC,qCAAU;;AAEjC;;AAEA","file":"observers/actorable.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./observers/actorable.js\");\n","let filters = {};\n\nclass Filter {\n  static tokenize (signature) {\n    if (typeof signature !== 'string') {\n      throw new Error('Cannot tokenize non-string filter signature');\n    }\n\n    let [ head, ...rest ] = signature.split(':');\n    rest = rest.join(':');\n    rest = rest.length === 0 ? [] : rest.split(',');\n\n    return [ head, ...rest ];\n  }\n\n  static get (signature) {\n    let signatureType = typeof signature;\n\n    if (signatureType === 'function') {\n      return signature;\n    }\n\n    if (signatureType === 'string') {\n      signature = Filter.tokenize(signature);\n    }\n\n    if (!Array.isArray(signature)) {\n      throw new Error(`Unknown filter by ${signatureType}`);\n    }\n\n    let [ fn, ...args ] = signature;\n\n    if (fn in filters === false) {\n      try {\n        filters[fn] = require('./filters/' + fn);\n      } catch (err) {\n        filters[fn] = null;\n      }\n    }\n\n    if (!filters[fn]) {\n      let normalizedSignature = 'unknown';\n      try {\n        normalizedSignature = JSON.stringify(signature);\n      } catch (err) {\n        // noop\n      }\n      throw new Error(`Filter ${fn} not found <${signatureType}(${normalizedSignature})>`);\n    }\n\n    return filters[fn](...args);\n  }\n\n  static put (name, filter) {\n    filters[name] = filter;\n  }\n\n  static reset () {\n    filters = {};\n  }\n}\n\nmodule.exports = Filter;\n","var map = {\n\t\"./are\": \"./filters/are.js\",\n\t\"./are.js\": \"./filters/are.js\",\n\t\"./default\": \"./filters/default.js\",\n\t\"./default.js\": \"./filters/default.js\",\n\t\"./email\": \"./filters/email.js\",\n\t\"./email.js\": \"./filters/email.js\",\n\t\"./enum\": \"./filters/enum.js\",\n\t\"./enum.js\": \"./filters/enum.js\",\n\t\"./exists\": \"./filters/exists.js\",\n\t\"./exists.js\": \"./filters/exists.js\",\n\t\"./notEmpty\": \"./filters/notEmpty.js\",\n\t\"./notEmpty.js\": \"./filters/notEmpty.js\",\n\t\"./notExists\": \"./filters/notExists.js\",\n\t\"./notExists.js\": \"./filters/notExists.js\",\n\t\"./required\": \"./filters/required.js\",\n\t\"./required.js\": \"./filters/required.js\",\n\t\"./requiredIf\": \"./filters/requiredIf.js\",\n\t\"./requiredIf.js\": \"./filters/requiredIf.js\",\n\t\"./unique\": \"./filters/unique.js\",\n\t\"./unique.js\": \"./filters/unique.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./filters sync recursive ^\\\\.\\\\/.*$\";","module.exports = function (schema) {\n  return async function (value = null, { session, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let err = new Error(`Field ${name} values must be ${schema}`);\n\n    if (!Array.isArray(value)) {\n      throw err;\n    }\n\n    try {\n      let schemaO = session.getSchema(schema);\n      await Promise.all(value.map(row => schemaO.filter(row, { session })));\n      value = value.map(row => schemaO.attach(row));\n    } catch (err) {\n      console.error(`Caught error at nested model, ${err.stack}`);\n      throw new Error(`Field ${name} must be compatible to '${schema}'`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function def (defaultValue) {\n  return function (value = null) {\n    if (!value) {\n      return defaultValue;\n    }\n\n    return value;\n  };\n};\n","module.exports = function email () {\n  return function (value = null, { field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    value = value.toLowerCase();\n\n    let err = new Error(`Field ${name} must be valid email`);\n\n    const parts = value.split('@');\n\n    if (parts.length !== 2) {\n      throw err;\n    }\n\n    const domain = parts.pop();\n    let user = parts.join('@');\n\n    if (domain === 'gmail.com' || domain === 'googlemail.com') {\n      user = user.replace(/\\./g, '').toLowerCase();\n    }\n\n    if (user.length > 64 || domain.length > 256) {\n      throw err;\n    }\n\n    return value;\n  };\n};\n","module.exports = function (...enums) {\n  return function (value = null, { field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    if (enums.indexOf(value) === -1) {\n      throw new Error(`Field ${name} out of enum range`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function exists (schema, key = 'id') {\n  return async function (value, { session, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let criteria = {};\n    criteria[key] = value;\n\n    if (!(await session.factory(schema, criteria).single())) {\n      throw new Error(`Field ${name} must be exists`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function notEmpty () {\n  return function (value, { field: { name } }) {\n    if (!value || (Array.isArray(value) && value.length)) {\n      throw new Error(`Field ${name} must not empty`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function notExists (schema) {\n  return async function (value, { row, session, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let criteria = { [name]: value };\n    let foundRow = await session.factory(schema, criteria).single();\n    if (foundRow && foundRow.id !== row.id) {\n      throw new Error(`Field ${name} already exists in ${schema}`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function required () {\n  return function (value = null, { field: { name = 'unknown' } }) {\n    if (value === null || value === '') {\n      throw new Error(`Field ${name} is required`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function requiredIf (key, expected) {\n  return function (value = null, { session, row, field: { name = 'unknown' } }) {\n    if (row[key] === expected && (value === null || value === '')) {\n      throw new Error(`Field ${name} is required`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function unique () {\n  return async function (value, { row, session, schema, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let criteria = { [name]: value };\n    let foundRow = await session.factory(schema.name, criteria).single();\n    if (foundRow && foundRow.id !== row.id) {\n      throw new Error(`Field ${name} must be unique`);\n    }\n\n    return value;\n  };\n};\n","const NString = require('../schemas/nstring');\n\nclass Actorable {\n  constructor ({\n    createdKey = 'created_by',\n    updatedKey = 'updated_by',\n    userCallback = ctx => ctx.query.session.actor || null,\n  } = {}) {\n    this.createdKey = createdKey;\n    this.updatedKey = updatedKey;\n    this.userCallback = userCallback;\n  }\n\n  initialize (schema) {\n    schema.addField(new NString(this.createdKey));\n    schema.addField(new NString(this.updatedKey));\n  }\n\n  async insert (ctx, next) {\n    let { query } = ctx;\n    query.rows.forEach(row => {\n      row[this.createdKey] = row[this.updatedKey] = this.userCallback(ctx);\n    });\n\n    await next();\n  }\n\n  async update (ctx, next) {\n    let { query } = ctx;\n    query.sets[this.updatedKey] = this.userCallback(ctx);\n\n    await next();\n  }\n}\n\n// eslint-disable\nif (typeof window !== 'undefined') {\n  let norm = window.norm;\n  if (!norm) {\n    throw new Error('Norm is not defined yet!');\n  }\n\n  norm.observers = norm.observers || {};\n  norm.observers.Actorable = Actorable;\n}\n// eslint-enable\n\nmodule.exports = Actorable;\n","const Filter = require('../filter');\n\nclass NField {\n  constructor (name) {\n    this.name = name;\n    this.rawFilters = [];\n    this.filters = [];\n    this.attributes = {};\n  }\n\n  set (key, value) {\n    this.attributes[key] = value;\n    return this;\n  }\n\n  get (key) {\n    return this.attributes[key];\n  }\n\n  filter (...filters) {\n    filters.forEach(filter => {\n      try {\n        filter = Filter.tokenize(filter);\n      } catch (err) {\n        // noop\n      }\n\n      this.rawFilters.push(filter);\n      this.filters.push(Filter.get(filter));\n    });\n\n    return this;\n  }\n\n  execFilter (value, { session, row, schema }) {\n    // when value is string, trim first before filtering\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    let field = this;\n    return this.filters.reduce(\n      async (promise, filter) => filter(await promise, { session, row, schema, field }),\n      value\n    );\n  }\n\n  attach (value) {\n    if (value === '' || value === undefined || value === null) {\n      return null;\n    }\n\n    return value;\n  }\n\n  serialize (value) {\n    return value;\n  }\n\n  compare (criteria, value) {\n    if (value === undefined) {\n      value = null;\n    }\n\n    if (criteria === value) {\n      return 0;\n    }\n\n    if (criteria === null) {\n      return 1;\n    }\n\n    if (criteria > value) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  indexOf (criteria, value) {\n    return criteria.indexOf(value);\n  }\n}\n\nmodule.exports = NField;\n","const NField = require('./nfield');\n\nmodule.exports = class NString extends NField {\n\n};\n"],"sourceRoot":""}
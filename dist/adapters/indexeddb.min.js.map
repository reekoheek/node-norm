{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./connection.js","webpack:///./adapters/memory.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./adapters/indexeddb.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","[object Object]","this","_hasTx","_begin","_commit","_rollback","Connection","uuidv4","Memory","options","super","data","query","callback","schema","criteria","sorts","filter","row","_matchCriteria","sortFields","keys","sort","a","b","score","forEach","field","index","sortV","fieldScore","Math","pow","length","offset","slice","map","rows","reduce","inserted","qRow","id","k","getField","serialize","push","sets","load","affected","indexOf","splice","useSkipAndLimit","count","critValue","nkey","op","split","rowValue","valid","subCriteria","compare","re","RegExp","match","Error","window","norm","adapters","rng","bytesToUuid","buf","Array","rnds","random","ii","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","byteToHex","toString","substr","bth","join","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","IndexedDB","dbname","version","onUpgradeNeeded","store","__getStore","Promise","resolve","reject","req","openCursor","onsuccess","evt","cursor","target","result","continue","onerror","err","all","async","__promised","add","put","delete","clear","truncate","open","onupgradeneeded","names","__getDB","transaction","__getTx","objectStore"],"mappings":"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","file":"adapters/indexeddb.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","class Connection {\n  constructor ({ name }) {\n    this.name = name;\n    this._hasTx = false;\n  }\n\n  async begin () {\n    if (this._hasTx) {\n      return;\n    }\n\n    await this._begin();\n\n    this._hasTx = true;\n  }\n\n  async commit () {\n    if (!this._hasTx) {\n      return;\n    }\n\n    await this._commit();\n    this._hasTx = false;\n  }\n\n  async rollback () {\n    if (!this._hasTx) {\n      return;\n    }\n\n    await this._rollback();\n    this._hasTx = false;\n  }\n\n  _begin () {\n    // do nothing\n  }\n\n  _commit () {\n    // do nothing\n  }\n\n  _rollback () {\n    // do nothing\n  }\n}\n\nmodule.exports = Connection;\n","const Connection = require('../connection');\nconst uuidv4 = require('uuid/v4');\n\nclass Memory extends Connection {\n  constructor (options) {\n    super(options);\n\n    this.data = options.data || {};\n  }\n\n  load (query, callback = () => {}) {\n    let data = this.data[query.schema.name] || [];\n\n    let { criteria, sorts } = query;\n\n    // if (criteria && typeof criteria.id !== 'undefined') {\n    //   const row = data.find(row => row.id === criteria.id);\n    //   data = row ? [ row ] : [];\n    // } else {\n    data = data.filter(row => this._matchCriteria(criteria, row, query.schema));\n\n    if (sorts) {\n      let sortFields = Object.keys(sorts);\n\n      data = data.sort((a, b) => {\n        let score = 0;\n        sortFields.forEach((field, index) => {\n          let sortV = sorts[field];\n          let fieldScore = Math.pow(2, sortFields.length - index - 1) * sortV;\n          if (a[field] < b[field]) {\n            score -= fieldScore;\n          } else if (a[field] > b[field]) {\n            score += fieldScore;\n          }\n        });\n        return score;\n      });\n    }\n\n    if (query.offset < 0) {\n      return data;\n    } else if (query.length < 0) {\n      data = data.slice(query.offset);\n    } else {\n      data = data.slice(query.offset, query.offset + query.length);\n    }\n    // }\n\n    return data.map(row => {\n      callback(row);\n      return row;\n    });\n  }\n\n  insert (query, callback = () => {}) {\n    const data = this.data[query.schema.name] = this.data[query.schema.name] || [];\n\n    return query.rows.reduce((inserted, qRow) => {\n      let row = { id: uuidv4() };\n      for (let k in qRow) {\n        row[k] = query.schema.getField(k).serialize(qRow[k]);\n      }\n      data.push(row);\n      callback(row);\n      inserted++;\n      return inserted;\n    }, 0);\n  }\n\n  update (query) {\n    let keys = Object.keys(query.sets);\n    return this.load(query).reduce((affected, row) => {\n      let fieldChanges = keys.filter(key => {\n        if (row[key] === query.sets[key]) {\n          return false;\n        }\n\n        row[key] = query.schema.getField(key).serialize(query.sets[key]);\n        return true;\n      });\n      if (fieldChanges.length) {\n        affected++;\n      }\n      return affected;\n    }, 0);\n  }\n\n  drop (query) {\n    delete this.data[query.schema.name];\n  }\n\n  truncate (query) {\n    this.data[query.schema.name] = [];\n  }\n\n  delete (query) {\n    const data = this.data[query.schema.name] = this.data[query.schema.name] || [];\n\n    this.load(query).forEach(row => {\n      const key = data.indexOf(row);\n      if (key >= 0) {\n        data.splice(key, 1);\n      }\n    });\n  }\n\n  async count (query, useSkipAndLimit) {\n    let { length, offset } = query;\n\n    if (!useSkipAndLimit) {\n      query.offset = 0;\n      query.length = -1;\n    }\n\n    let count = 0;\n\n    await this.load(query, () => count++);\n\n    query.offset = offset;\n    query.length = length;\n\n    return count;\n  }\n\n  _matchCriteria (criteria, row, schema) {\n    if (!criteria) {\n      return true;\n    }\n\n    for (let key in criteria) {\n      let critValue = criteria[key];\n      let [ nkey, op = 'eq' ] = key.split('!');\n      let field = schema.getField(nkey);\n      let rowValue = row[nkey];\n      switch (op) {\n        case 'or': {\n          let valid = false;\n          for (let subCriteria of critValue) {\n            let match = this._matchCriteria(subCriteria, row, schema);\n            if (match) {\n              valid = true;\n              break;\n            }\n          }\n          if (!valid) {\n            return false;\n          }\n          break;\n        }\n        case 'and':\n          for (let subCriteria of critValue) {\n            if (!this._matchCriteria(subCriteria, row, schema)) {\n              return false;\n            }\n          }\n          break;\n        case 'eq':\n          if (field.compare(critValue, rowValue) !== 0) {\n            return false;\n          }\n          break;\n        case 'ne':\n          if (field.compare(critValue, rowValue) === 0) {\n            return false;\n          }\n          break;\n        case 'gt': {\n          if (field.compare(critValue, rowValue) <= 0) {\n            return false;\n          }\n          break;\n        }\n        case 'gte':\n          if (field.compare(critValue, rowValue) < 0) {\n            return false;\n          }\n          break;\n        case 'lt':\n          if (field.compare(critValue, rowValue) >= 0) {\n            return false;\n          }\n          break;\n        case 'lte':\n          if (field.compare(critValue, rowValue) > 0) {\n            return false;\n          }\n          break;\n        case 'in':\n          if (field.indexOf(critValue, rowValue) === -1) {\n            return false;\n          }\n          break;\n        case 'nin':\n          if (field.indexOf(critValue, rowValue) !== -1) {\n            return false;\n          }\n          break;\n        case 'like': {\n          let re = new RegExp(critValue);\n          if (!rowValue.match(re)) {\n            return false;\n          }\n          break;\n        }\n        case 'regex':\n          if (!rowValue.match(critValue)) {\n            return false;\n          }\n          break;\n        case 'where':\n          if (!critValue(rowValue, row)) {\n            return false;\n          }\n          break;\n        default:\n          throw new Error(`Operator '${op}' is not implemented yet!`);\n      }\n    }\n\n    return true;\n  }\n}\n\nif (typeof window !== 'undefined') {\n  let norm = window.norm;\n  if (!norm) {\n    throw new Error('Norm is not defined yet!');\n  }\n\n  norm.adapters = norm.adapters || {};\n  norm.adapters.Memory = Memory;\n}\n\nmodule.exports = Memory;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// const debug = require('debug')('node-norm:adapters:indexeddb');\n\nif (typeof window === 'undefined') {\n  throw new Error('IndexedDB adapter only works at browser');\n}\n\nconst Memory = require('./memory');\nconst indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB || window.shimIndexedDB;\n// const IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {READ_WRITE: \"readwrite\"}; // This line should only be needed if it is needed to support the object's constants for older browsers\n// const IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n\nif (!window.indexedDB) {\n  throw new Error(`Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.`);\n}\n\nclass IndexedDB extends Memory {\n  constructor ({ name, dbname = 'db', version = 1, onUpgradeNeeded = () => {} }) {\n    super({ name });\n\n    this.dbname = dbname;\n    this.version = version;\n    this.onUpgradeNeeded = onUpgradeNeeded;\n  }\n\n  async load (query, callback = () => {}) {\n    let { criteria } = query;\n    let store = await this.__getStore(query.schema.name);\n\n    // TODO: implement sorting?\n    // let { criteria, sorts } = query;\n\n    let rows = await new Promise((resolve, reject) => {\n      let rows = [];\n      let req = store.openCursor();\n      req.onsuccess = evt => {\n        let cursor = evt.target.result;\n        if (!cursor) {\n          return resolve(rows);\n        }\n\n        let row = cursor.value;\n        if (this._matchCriteria(criteria, row, query.schema)) {\n          rows.push(row);\n        }\n        cursor.continue();\n      };\n\n      req.onerror = function (err) {\n        reject(err);\n      };\n    });\n\n    rows.forEach(row => callback(row));\n  }\n\n  async insert (query, callback = () => {}) {\n    let store = await this.__getStore(query.schema.name);\n\n    let inserted = 0;\n\n    await Promise.all(query.rows.map(async row => {\n      row.id = await this.__promised(store.add(row));\n      callback(row);\n      inserted++;\n    }));\n\n    return inserted;\n  }\n\n  async update (query) {\n    let rows = [];\n    await this.load(query, row => rows.push(row));\n\n    let store = await this.__getStore(query.schema.name);\n\n    let keys = Object.keys(query.sets);\n    let affected = 0;\n\n    await Promise.all(rows.map(row => {\n      let fieldChanges = keys.filter(key => {\n        if (row[key] === query.sets[key]) {\n          return false;\n        }\n\n        row[key] = query.sets[key];\n        return true;\n      });\n\n      if (fieldChanges.length) {\n        affected++;\n\n        return this.__promised(store.put(row));\n      }\n    }));\n\n    return affected;\n  }\n\n  async delete (query) {\n    let rows = [];\n    await this.load(query, row => rows.push(row));\n\n    let store = await this.__getStore(query.schema.name);\n\n    await rows.map(row => this.__promised(store.delete(row.id)));\n  }\n\n  async truncate (query) {\n    let store = await this.__getStore(query.schema.name);\n    await this.__promised(store.clear());\n  }\n\n  drop (query) {\n    return this.truncate(query);\n  }\n\n  async __getDB () {\n    let req = indexedDB.open(this.dbname, this.version);\n    req.onupgradeneeded = this.onUpgradeNeeded;\n    let db = await this.__promised(req);\n    return db;\n  }\n\n  __promised (req) {\n    return new Promise((resolve, reject) => {\n      req.onsuccess = evt => resolve(evt.target.result);\n      req.onerror = reject;\n    });\n  }\n\n  async __getTx (names) {\n    let db = await this.__getDB();\n    return db.transaction(names, 'readwrite');\n  }\n\n  async __getStore (name) {\n    let tx = await this.__getTx(name);\n    return tx.objectStore(name);\n  }\n}\n\nif (typeof window !== 'undefined') {\n  let norm = window.norm;\n  if (!norm) {\n    throw new Error('Norm is not defined yet!');\n  }\n\n  norm.adapters = norm.adapters || {};\n  norm.adapters.IndexedDB = IndexedDB;\n}\n\nmodule.exports = IndexedDB;\n"],"sourceRoot":""}
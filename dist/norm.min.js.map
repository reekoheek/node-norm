{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./schemas/nfield.js","webpack:///./filters/are.js","webpack:///./filters/default.js","webpack:///./filters/email.js","webpack:///./filters/enum.js","webpack:///./filters/exists.js","webpack:///./filters/notEmpty.js","webpack:///./filters/notExists.js","webpack:///./filters/required.js","webpack:///./filters/requiredIf.js","webpack:///./filters/unique.js","webpack:///./filter.js","webpack:///./connection.js","webpack:///./filters sync ^\\.\\/.*$","webpack:///./adapters/memory.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/generic-pool/lib/Deferred.js","webpack:///./node_modules/generic-pool/lib/Deque.js","webpack:///./schemas/ndatetime.js","webpack:///./schemas/nstring.js","webpack:///./pool.js","webpack:///./node_modules/generic-pool/lib/DefaultEvictor.js","webpack:///./node_modules/generic-pool/lib/DoublyLinkedList.js","webpack:///./node_modules/generic-pool/lib/DequeIterator.js","webpack:///./node_modules/generic-pool/lib/PriorityQueue.js","webpack:///./schema.js","webpack:///./model.js","webpack:///./query.js","webpack:///./index.js","webpack:///./manager.js","webpack:///./node_modules/generic-pool/index.js","webpack:///./node_modules/generic-pool/lib/Pool.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/generic-pool/lib/factoryValidator.js","webpack:///./node_modules/generic-pool/lib/PoolOptions.js","webpack:///./node_modules/generic-pool/lib/PoolDefaults.js","webpack:///./node_modules/generic-pool/lib/ResourceRequest.js","webpack:///./node_modules/generic-pool/lib/errors.js","webpack:///./node_modules/generic-pool/lib/ResourceLoan.js","webpack:///./node_modules/generic-pool/lib/PooledResource.js","webpack:///./node_modules/generic-pool/lib/PooledResourceStateEnum.js","webpack:///./node_modules/generic-pool/lib/DoublyLinkedListIterator.js","webpack:///./node_modules/generic-pool/lib/Queue.js","webpack:///./node_modules/generic-pool/lib/utils.js","webpack:///./errors/filter.js","webpack:///./node_modules/koa-compose/index.js","webpack:///./session.js","webpack:///./node_modules/async-factory/index.js","webpack:///./schemas/index.js","webpack:///./schemas/nboolean.js","webpack:///./schemas/ndouble.js","webpack:///./schemas/ninteger.js","webpack:///./schemas/nreference.js","webpack:///./schemas/ntext.js","webpack:///./schemas/nlist.js","webpack:///./schemas/nmap.js","webpack:///./schemas/nbig.js","webpack:///./node_modules/big.js/big.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Filter","[object Object]","this","rawFilters","filters","attributes","forEach","filter","tokenize","err","push","session","row","schema","trim","field","reduce","async","promise","criteria","undefined","indexOf","Error","Array","isArray","schemaO","getSchema","Promise","all","map","attach","console","error","stack","defaultValue","toLowerCase","parts","split","length","domain","pop","user","join","replace","enums","factory","single","foundRow","id","expected","signature","head","rest","signatureType","fn","args","normalizedSignature","JSON","stringify","_hasTx","_begin","_commit","_rollback","./are","./are.js","./default","./default.js","./email","./email.js","./enum","./enum.js","./exists","./exists.js","./notEmpty","./notEmpty.js","./notExists","./notExists.js","./required","./required.js","./requiredIf","./requiredIf.js","./unique","./unique.js","webpackContext","req","webpackContextResolve","e","code","keys","resolve","Connection","uuidv4","Memory","options","super","data","query","callback","sorts","_matchCriteria","sortFields","sort","a","b","score","index","sortV","fieldScore","Math","pow","offset","slice","rows","inserted","qRow","k","getField","serialize","sets","load","affected","splice","useSkipAndLimit","count","critValue","nkey","op","rowValue","valid","subCriteria","compare","re","RegExp","match","window","norm","adapters","rng","bytesToUuid","buf","rnds","random","ii","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","byteToHex","toString","substr","bth","Deferred","_state","PENDING","_resolve","_reject","_promise","reject","state","reason","REJECTED","FULFILLED","DoublyLinkedList","DequeIterator","_list","node","remove","element","createNode","insertBeginning","insertEnd","tail","iterator","NField","isNaN","Number","date","Date","setTime","getTime","genericPool","Schema","poolNextId","config","adapter","schemas","min","max","colOptions","putSchema","Adapter","writable","configurable","createPool","end","fields","observers","modelClass","connection","_pool","acquire","release","drain","clear","pooledResource","availableObjectsCount","idleTime","now","lastIdleTime","softIdleTimeoutMillis","idleTimeoutMillis","prev","next","insertBefore","insertAfter","newNode","DoublyLinkedListIterator","result","Queue","size","_size","_slots","_length","slots","obj","priority","sl","shift","FilterError","Model","compose","observer","addObserver","find","f","initialize","partial","ctx","_observerRunner","units","add","execFilter","empty","Query","parseSchema","set","observe","_delete","delete","_save","insert","update","drop","truncate","limit","Manager","Pool","lib","Session","ctr","connections","pools","main","putPool","pool","openSession","close","dispose","manager","Deque","PriorityQueue","DefaultEvictor","EventEmitter","factoryValidator","PoolOptions","ResourceRequest","ResourceLoan","PooledResource","reflector","FACTORY_CREATE_ERROR","FACTORY_DESTROY_ERROR","Evictor","_config","_Promise","_factory","_draining","_started","_waitingClientsQueue","priorityRange","_factoryCreateOperations","Set","_factoryDestroyOperations","_availableObjects","_testOnBorrowResources","_testOnReturnResources","_validationOperations","_allObjects","_resourceLoans","Map","_evictionIterator","_evictor","_scheduledEviction","autostart","start","invalidate","destroyPromise","destroy","wrappedDestroyPromise","_trackOperation","catch","emit","_ensureMinimum","test","validationPromise","validate","wrappedValidationPromise","then","isValid","_destroy","_dispense","_dispatchPooledResourceToNextWaitingClient","numWaitingClients","resourceShortfall","_potentiallyAllocableResourceCount","actualNumberOfResourcesToCreate","spareResourceCapacity","_createResource","testOnBorrow","desiredNumberOfResourcesToMoveIntoTest","actualNumberOfResourcesToMoveIntoTest","_testOnBorrow","actualNumberOfResourcesToDispatch","_dispatchResource","clientResourceRequest","dequeue","_addPooledResourceToAvailableObjects","loan","allocate","operation","v","factoryPromise","wrappedFactoryPromise","resource","_handleNewResource","minShortfall","_count","testsToRun","numTestsPerEvictionRun","evictionConfig","testsHaveRun","iterationResult","done","reset","shouldEvict","evict","evictionRunIntervalMillis","setTimeout","_evict","_scheduleEvictorRun","clearTimeout","maxWaitingClients","resourceRequest","acquireTimeoutMillis","enqueue","deallocate","idle","fifo","unshift","__allResourceRequestsSettled","__allResourcesReturned","_descheduleEvictorRun","ps","from","values","reflectedCreatePromises","reflectedDestroyPromises","available","borrowed","pending","_events","_maxListeners","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","TypeError","type","er","handler","len","listeners","arguments","context","apply","addListener","listener","newListener","warned","trace","on","once","fired","g","removeListener","list","position","removeAllListeners","listenerCount","evlistener","emitter","PoolDefaults","opts","poolDefaults","testOnReturn","parseInt","errors","ttl","_creationTimestamp","_timeout","delay","age","removeTimeout","_fireTimeout","TimeoutError","ExtendableError","message","constructor","captureStackTrace","PooledResourceStateEnum","creationTime","lastReturnTime","lastBorrowTime","IDLE","ALLOCATED","INVALID","VALIDATION","RETURNING","doublyLinkedList","reverse","_direction","_startPosition","_cursor","_done","_isCursorDetached","_advanceCursor","_createTimeoutRejectionHandler","noop","status","children","child","middleware","dispatch","connectionFactory","sessionNextId","assign","getPool","singleton","begin","rollback","commit","Space","locks","spaces","space","has","fetch","NBoolean","NDatetime","NDouble","NInteger","NReference","NString","NText","NList","NMap","NBig","Boolean","parseFloat","to","childField","parse","criteriaKeys","getOwnPropertyNames","valueKeys","includes","Big","cmp","toJSON","__WEBPACK_AMD_DEFINE_RESULT__","GLOBAL","DP","RM","MAX_DP","NE","PE","NAME","INVALID_DP","INVALID_RM","P","UNDEFINED","NUMERIC","round","x","dp","rm","more","xc","z","charAt","abs","y","isneg","yc","j","div","bl","bt","ri","bz","ai","al","rl","q","qc","qi","eq","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","sqrt","half","toExponential","mul","toFixed","toPrecision","sd","valueOf","_Big_","nl","search","substring","version"],"mappings":"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","file":"norm.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","const Filter = require('../filter');\n\nclass NField {\n  constructor (name) {\n    this.name = name;\n    this.rawFilters = [];\n    this.filters = [];\n    this.attributes = {};\n  }\n\n  set (key, value) {\n    this.attributes[key] = value;\n    return this;\n  }\n\n  get (key) {\n    return this.attributes[key];\n  }\n\n  filter (...filters) {\n    filters.forEach(filter => {\n      try {\n        filter = Filter.tokenize(filter);\n      } catch (err) {\n        // noop\n      }\n\n      this.rawFilters.push(filter);\n      this.filters.push(Filter.get(filter));\n    });\n\n    return this;\n  }\n\n  execFilter (value, { session, row, schema }) {\n    // when value is string, trim first before filtering\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    let field = this;\n    return this.filters.reduce(\n      async (promise, filter) => filter(await promise, { session, row, schema, field }),\n      value\n    );\n  }\n\n  attach (value) {\n    if (value === '' || value === undefined || value === null) {\n      return null;\n    }\n\n    return value;\n  }\n\n  serialize (value) {\n    return value;\n  }\n\n  compare (criteria, value) {\n    if (value === undefined) {\n      value = null;\n    }\n\n    if (criteria === value) {\n      return 0;\n    }\n\n    if (criteria === null) {\n      return 1;\n    }\n\n    if (criteria > value) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  indexOf (criteria, value) {\n    return criteria.indexOf(value);\n  }\n}\n\nmodule.exports = NField;\n","module.exports = function (schema) {\n  return async function (value = null, { session, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let err = new Error(`Field ${name} values must be ${schema}`);\n\n    if (!Array.isArray(value)) {\n      throw err;\n    }\n\n    try {\n      let schemaO = session.getSchema(schema);\n      await Promise.all(value.map(row => schemaO.filter(row, { session })));\n      value = value.map(row => schemaO.attach(row));\n    } catch (err) {\n      console.error(`Caught error at nested model, ${err.stack}`);\n      throw new Error(`Field ${name} must be compatible to '${schema}'`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function def (defaultValue) {\n  return function (value = null) {\n    if (!value) {\n      return defaultValue;\n    }\n\n    return value;\n  };\n};\n","module.exports = function email () {\n  return function (value = null, { field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    value = value.toLowerCase();\n\n    let err = new Error(`Field ${name} must be valid email`);\n\n    const parts = value.split('@');\n\n    if (parts.length !== 2) {\n      throw err;\n    }\n\n    const domain = parts.pop();\n    let user = parts.join('@');\n\n    if (domain === 'gmail.com' || domain === 'googlemail.com') {\n      user = user.replace(/\\./g, '').toLowerCase();\n    }\n\n    if (user.length > 64 || domain.length > 256) {\n      throw err;\n    }\n\n    return value;\n  };\n};\n","module.exports = function (...enums) {\n  return function (value = null, { field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    if (enums.indexOf(value) === -1) {\n      throw new Error(`Field ${name} out of enum range`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function exists (schema, key = 'id') {\n  return async function (value, { session, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let criteria = {};\n    criteria[key] = value;\n\n    if (!(await session.factory(schema, criteria).single())) {\n      throw new Error(`Field ${name} must be exists`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function notEmpty () {\n  return function (value, { field: { name } }) {\n    if (!value || (Array.isArray(value) && value.length)) {\n      throw new Error(`Field ${name} must not empty`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function notExists (schema) {\n  return async function (value, { row, session, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let criteria = { [name]: value };\n    let foundRow = await session.factory(schema, criteria).single();\n    if (foundRow && foundRow.id !== row.id) {\n      throw new Error(`Field ${name} already exists in ${schema}`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function required () {\n  return function (value = null, { field: { name = 'unknown' } }) {\n    if (value === null || value === '') {\n      throw new Error(`Field ${name} is required`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function requiredIf (key, expected) {\n  return function (value = null, { session, row, field: { name = 'unknown' } }) {\n    if (row[key] === expected && (value === null || value === '')) {\n      throw new Error(`Field ${name} is required`);\n    }\n\n    return value;\n  };\n};\n","module.exports = function unique () {\n  return async function (value, { row, session, schema, field: { name } }) {\n    if (value === null || value === '') {\n      return null;\n    }\n\n    let criteria = { [name]: value };\n    let foundRow = await session.factory(schema.name, criteria).single();\n    if (foundRow && foundRow.id !== row.id) {\n      throw new Error(`Field ${name} must be unique`);\n    }\n\n    return value;\n  };\n};\n","let filters = {};\n\nclass Filter {\n  static tokenize (signature) {\n    if (typeof signature !== 'string') {\n      throw new Error('Cannot tokenize non-string filter signature');\n    }\n\n    let [ head, ...rest ] = signature.split(':');\n    rest = rest.join(':');\n    rest = rest.length === 0 ? [] : rest.split(',');\n\n    return [ head, ...rest ];\n  }\n\n  static get (signature) {\n    let signatureType = typeof signature;\n\n    if (signatureType === 'function') {\n      return signature;\n    }\n\n    if (signatureType === 'string') {\n      signature = Filter.tokenize(signature);\n    }\n\n    if (!Array.isArray(signature)) {\n      throw new Error(`Unknown filter by ${signatureType}`);\n    }\n\n    let [ fn, ...args ] = signature;\n\n    if (fn in filters === false) {\n      try {\n        filters[fn] = require('./filters/' + fn);\n      } catch (err) {\n        filters[fn] = null;\n      }\n    }\n\n    if (!filters[fn]) {\n      let normalizedSignature = 'unknown';\n      try {\n        normalizedSignature = JSON.stringify(signature);\n      } catch (err) {\n        // noop\n      }\n      throw new Error(`Filter ${fn} not found <${signatureType}(${normalizedSignature})>`);\n    }\n\n    return filters[fn](...args);\n  }\n\n  static put (name, filter) {\n    filters[name] = filter;\n  }\n\n  static reset () {\n    filters = {};\n  }\n}\n\nmodule.exports = Filter;\n","class Connection {\n  constructor ({ name }) {\n    this.name = name;\n    this._hasTx = false;\n  }\n\n  async begin () {\n    if (this._hasTx) {\n      return;\n    }\n\n    await this._begin();\n\n    this._hasTx = true;\n  }\n\n  async commit () {\n    if (!this._hasTx) {\n      return;\n    }\n\n    await this._commit();\n    this._hasTx = false;\n  }\n\n  async rollback () {\n    if (!this._hasTx) {\n      return;\n    }\n\n    await this._rollback();\n    this._hasTx = false;\n  }\n\n  _begin () {\n    // do nothing\n  }\n\n  _commit () {\n    // do nothing\n  }\n\n  _rollback () {\n    // do nothing\n  }\n}\n\nmodule.exports = Connection;\n","var map = {\n\t\"./are\": 1,\n\t\"./are.js\": 1,\n\t\"./default\": 2,\n\t\"./default.js\": 2,\n\t\"./email\": 3,\n\t\"./email.js\": 3,\n\t\"./enum\": 4,\n\t\"./enum.js\": 4,\n\t\"./exists\": 5,\n\t\"./exists.js\": 5,\n\t\"./notEmpty\": 6,\n\t\"./notEmpty.js\": 6,\n\t\"./notExists\": 7,\n\t\"./notExists.js\": 7,\n\t\"./required\": 8,\n\t\"./required.js\": 8,\n\t\"./requiredIf\": 9,\n\t\"./requiredIf.js\": 9,\n\t\"./unique\": 10,\n\t\"./unique.js\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","const Connection = require('../connection');\nconst uuidv4 = require('uuid/v4');\n\nclass Memory extends Connection {\n  constructor (options) {\n    super(options);\n\n    this.data = options.data || {};\n  }\n\n  load (query, callback = () => {}) {\n    let data = this.data[query.schema.name] || [];\n\n    let { criteria, sorts } = query;\n\n    // if (criteria && typeof criteria.id !== 'undefined') {\n    //   const row = data.find(row => row.id === criteria.id);\n    //   data = row ? [ row ] : [];\n    // } else {\n    data = data.filter(row => this._matchCriteria(criteria, row, query.schema));\n\n    if (sorts) {\n      let sortFields = Object.keys(sorts);\n\n      data = data.sort((a, b) => {\n        let score = 0;\n        sortFields.forEach((field, index) => {\n          let sortV = sorts[field];\n          let fieldScore = Math.pow(2, sortFields.length - index - 1) * sortV;\n          if (a[field] < b[field]) {\n            score -= fieldScore;\n          } else if (a[field] > b[field]) {\n            score += fieldScore;\n          }\n        });\n        return score;\n      });\n    }\n\n    if (query.offset < 0) {\n      return data;\n    } else if (query.length < 0) {\n      data = data.slice(query.offset);\n    } else {\n      data = data.slice(query.offset, query.offset + query.length);\n    }\n    // }\n\n    return data.map(row => {\n      callback(row);\n      return row;\n    });\n  }\n\n  insert (query, callback = () => {}) {\n    const data = this.data[query.schema.name] = this.data[query.schema.name] || [];\n\n    return query.rows.reduce((inserted, qRow) => {\n      let row = { id: uuidv4() };\n      for (let k in qRow) {\n        row[k] = query.schema.getField(k).serialize(qRow[k]);\n      }\n      data.push(row);\n      callback(row);\n      inserted++;\n      return inserted;\n    }, 0);\n  }\n\n  update (query) {\n    let keys = Object.keys(query.sets);\n    return this.load(query).reduce((affected, row) => {\n      let fieldChanges = keys.filter(key => {\n        if (row[key] === query.sets[key]) {\n          return false;\n        }\n\n        row[key] = query.schema.getField(key).serialize(query.sets[key]);\n        return true;\n      });\n      if (fieldChanges.length) {\n        affected++;\n      }\n      return affected;\n    }, 0);\n  }\n\n  drop (query) {\n    delete this.data[query.schema.name];\n  }\n\n  truncate (query) {\n    this.data[query.schema.name] = [];\n  }\n\n  delete (query) {\n    const data = this.data[query.schema.name] = this.data[query.schema.name] || [];\n\n    this.load(query).forEach(row => {\n      const key = data.indexOf(row);\n      if (key >= 0) {\n        data.splice(key, 1);\n      }\n    });\n  }\n\n  async count (query, useSkipAndLimit) {\n    let { length, offset } = query;\n\n    if (!useSkipAndLimit) {\n      query.offset = 0;\n      query.length = -1;\n    }\n\n    let count = 0;\n\n    await this.load(query, () => count++);\n\n    query.offset = offset;\n    query.length = length;\n\n    return count;\n  }\n\n  _matchCriteria (criteria, row, schema) {\n    if (!criteria) {\n      return true;\n    }\n\n    for (let key in criteria) {\n      let critValue = criteria[key];\n      let [ nkey, op = 'eq' ] = key.split('!');\n      let field = schema.getField(nkey);\n      let rowValue = row[nkey];\n      switch (op) {\n        case 'or': {\n          let valid = false;\n          for (let subCriteria of critValue) {\n            let match = this._matchCriteria(subCriteria, row, schema);\n            if (match) {\n              valid = true;\n              break;\n            }\n          }\n          if (!valid) {\n            return false;\n          }\n          break;\n        }\n        case 'and':\n          for (let subCriteria of critValue) {\n            if (!this._matchCriteria(subCriteria, row, schema)) {\n              return false;\n            }\n          }\n          break;\n        case 'eq':\n          if (field.compare(critValue, rowValue) !== 0) {\n            return false;\n          }\n          break;\n        case 'ne':\n          if (field.compare(critValue, rowValue) === 0) {\n            return false;\n          }\n          break;\n        case 'gt': {\n          if (field.compare(critValue, rowValue) <= 0) {\n            return false;\n          }\n          break;\n        }\n        case 'gte':\n          if (field.compare(critValue, rowValue) < 0) {\n            return false;\n          }\n          break;\n        case 'lt':\n          if (field.compare(critValue, rowValue) >= 0) {\n            return false;\n          }\n          break;\n        case 'lte':\n          if (field.compare(critValue, rowValue) > 0) {\n            return false;\n          }\n          break;\n        case 'in':\n          if (field.indexOf(critValue, rowValue) === -1) {\n            return false;\n          }\n          break;\n        case 'nin':\n          if (field.indexOf(critValue, rowValue) !== -1) {\n            return false;\n          }\n          break;\n        case 'like': {\n          let re = new RegExp(critValue);\n          if (!rowValue.match(re)) {\n            return false;\n          }\n          break;\n        }\n        case 'regex':\n          if (!rowValue.match(critValue)) {\n            return false;\n          }\n          break;\n        case 'where':\n          if (!critValue(rowValue, row)) {\n            return false;\n          }\n          break;\n        default:\n          throw new Error(`Operator '${op}' is not implemented yet!`);\n      }\n    }\n\n    return true;\n  }\n}\n\nif (typeof window !== 'undefined') {\n  let norm = window.norm;\n  if (!norm) {\n    throw new Error('Norm is not defined yet!');\n  }\n\n  norm.adapters = norm.adapters || {};\n  norm.adapters.Memory = Memory;\n}\n\nmodule.exports = Memory;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","\"use strict\";\n\n/**\n * This is apparently a bit like a Jquery deferred, hence the name\n */\n\nclass Deferred {\n  constructor(Promise) {\n    this._state = Deferred.PENDING;\n    this._resolve = undefined;\n    this._reject = undefined;\n\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  reject(reason) {\n    if (this._state !== Deferred.PENDING) {\n      return;\n    }\n    this._state = Deferred.REJECTED;\n    this._reject(reason);\n  }\n\n  resolve(value) {\n    if (this._state !== Deferred.PENDING) {\n      return;\n    }\n    this._state = Deferred.FULFILLED;\n    this._resolve(value);\n  }\n}\n\n// TODO: should these really live here? or be a seperate 'state' enum\nDeferred.PENDING = \"PENDING\";\nDeferred.FULFILLED = \"FULFILLED\";\nDeferred.REJECTED = \"REJECTED\";\n\nmodule.exports = Deferred;\n","\"use strict\";\n\nconst DoublyLinkedList = require(\"./DoublyLinkedList\");\nconst DequeIterator = require(\"./DequeIterator\");\n/**\n * DoublyLinkedList backed double ended queue\n * implements just enough to keep the Pool\n */\nclass Deque {\n  constructor() {\n    this._list = new DoublyLinkedList();\n  }\n\n  /**\n   * removes and returns the first element from the queue\n   * @return {any} [description]\n   */\n  shift() {\n    if (this.length === 0) {\n      return undefined;\n    }\n\n    const node = this._list.head;\n    this._list.remove(node);\n\n    return node.data;\n  }\n\n  /**\n   * adds one elemts to the beginning of the queue\n   * @param  {any} element [description]\n   * @return {any}         [description]\n   */\n  unshift(element) {\n    const node = DoublyLinkedList.createNode(element);\n\n    this._list.insertBeginning(node);\n  }\n\n  /**\n   * adds one to the end of the queue\n   * @param  {any} element [description]\n   * @return {any}         [description]\n   */\n  push(element) {\n    const node = DoublyLinkedList.createNode(element);\n\n    this._list.insertEnd(node);\n  }\n\n  /**\n   * removes and returns the last element from the queue\n   */\n  pop() {\n    if (this.length === 0) {\n      return undefined;\n    }\n\n    const node = this._list.tail;\n    this._list.remove(node);\n\n    return node.data;\n  }\n\n  [Symbol.iterator]() {\n    return new DequeIterator(this._list);\n  }\n\n  iterator() {\n    return new DequeIterator(this._list);\n  }\n\n  reverseIterator() {\n    return new DequeIterator(this._list, true);\n  }\n\n  /**\n   * get a reference to the item at the head of the queue\n   * @return {any} [description]\n   */\n  get head() {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const node = this._list.head;\n    return node.data;\n  }\n\n  /**\n   * get a reference to the item at the tail of the queue\n   * @return {any} [description]\n   */\n  get tail() {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const node = this._list.tail;\n    return node.data;\n  }\n\n  get length() {\n    return this._list.length;\n  }\n}\n\nmodule.exports = Deque;\n","const NField = require('./nfield');\n\nmodule.exports = class NDatetime extends NField {\n  attach (value) {\n    value = super.attach(value);\n\n    if (value === null) {\n      return null;\n    }\n\n    if (typeof value === 'string' && !isNaN(value)) {\n      value = Number(value);\n    }\n\n    if (typeof value === 'number') {\n      let date = new Date();\n      date.setTime(value);\n      return date;\n    }\n\n    let date = new Date(value);\n    if (isNaN(date.getTime())) {\n      throw new Error('Invalid datetime value');\n    }\n\n    return date;\n  }\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NString extends NField {\n\n};\n","const genericPool = require('generic-pool');\nconst Schema = require('./schema');\n\nlet poolNextId = 0;\n\nclass Pool {\n  constructor (config) {\n    let { name, adapter = require('./adapters/memory'), schemas = [], min = 1, max = 1 } = config;\n\n    this.name = name || `pool-${poolNextId++}`;\n    this.schemas = {};\n\n    schemas.forEach(colOptions => this.putSchema(colOptions));\n\n    const Adapter = adapter;\n\n    Object.defineProperty(this, '_pool', {\n      enumerable: false,\n      writable: false,\n      configurable: false,\n      value: genericPool.createPool({\n        create () {\n          return new Adapter(config);\n        },\n        async destroy (adapter) {\n          if (adapter.end) {\n            await adapter.end();\n          }\n        },\n      }, { min, max }),\n    });\n  }\n\n  putSchema ({ name, fields, observers, modelClass }) {\n    let connection = this.name;\n    this.schemas[name] = new Schema({ connection, name, fields, observers, modelClass });\n    return this;\n  }\n\n  /**\n   * Getter schema\n   *\n   * @param {string} name\n   */\n  getSchema (name) {\n    if (!this.schemas[name]) {\n      this.putSchema({ name });\n    }\n    return this.schemas[name];\n  }\n\n  acquire (...args) {\n    return this._pool.acquire(...args);\n  }\n\n  release (...args) {\n    return this._pool.release(...args);\n  }\n\n  drain (...args) {\n    return this._pool.drain(...args);\n  }\n\n  clear (...args) {\n    return this._pool.clear(...args);\n  }\n}\n\nmodule.exports = Pool;\n","\"use strict\";\n\nclass DefaultEvictor {\n  evict(config, pooledResource, availableObjectsCount) {\n    const idleTime = Date.now() - pooledResource.lastIdleTime;\n\n    if (\n      config.softIdleTimeoutMillis < idleTime &&\n      config.min < availableObjectsCount\n    ) {\n      return true;\n    }\n\n    if (config.idleTimeoutMillis < idleTime) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = DefaultEvictor;\n","\"use strict\";\n\n/**\n * A Doubly Linked List, because there aren't enough in the world...\n * this is pretty much a direct JS port of the one wikipedia\n * https://en.wikipedia.org/wiki/Doubly_linked_list\n *\n * For most usage 'insertBeginning' and 'insertEnd' should be enough\n *\n * nodes are expected to something like a POJSO like\n * {\n *   prev: null,\n *   next: null,\n *   something: 'whatever you like'\n * }\n */\nclass DoublyLinkedList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  insertBeginning(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.length++;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n  }\n\n  insertEnd(node) {\n    if (this.tail === null) {\n      this.insertBeginning(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n  }\n\n  insertAfter(node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.length++;\n  }\n\n  insertBefore(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.length++;\n  }\n\n  remove(node) {\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    node.prev = null;\n    node.next = null;\n    this.length--;\n  }\n\n  // FIXME: this should not live here and has become a dumping ground...\n  static createNode(data) {\n    return {\n      prev: null,\n      next: null,\n      data: data\n    };\n  }\n}\n\nmodule.exports = DoublyLinkedList;\n","\"use strict\";\n\nconst DoublyLinkedListIterator = require(\"./DoublyLinkedListIterator\");\n/**\n * Thin wrapper around an underlying DDL iterator\n */\nclass DequeIterator extends DoublyLinkedListIterator {\n  next() {\n    const result = super.next();\n\n    // unwrap the node...\n    if (result.value) {\n      result.value = result.value.data;\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = DequeIterator;\n","\"use strict\";\n\nconst Queue = require(\"./Queue\");\n\n/**\n * @class\n * @private\n */\nclass PriorityQueue {\n  constructor(size) {\n    this._size = Math.max(+size | 0, 1);\n    /** @type {Queue[]} */\n    this._slots = [];\n    // initialize arrays to hold queue elements\n    for (let i = 0; i < this._size; i++) {\n      this._slots.push(new Queue());\n    }\n  }\n\n  get length() {\n    let _length = 0;\n    for (let i = 0, slots = this._slots.length; i < slots; i++) {\n      _length += this._slots[i].length;\n    }\n    return _length;\n  }\n\n  enqueue(obj, priority) {\n    // Convert to integer with a default value of 0.\n    priority = (priority && +priority | 0) || 0;\n\n    if (priority) {\n      if (priority < 0 || priority >= this._size) {\n        priority = this._size - 1;\n        // put obj at the end of the line\n      }\n    }\n    this._slots[priority].push(obj);\n  }\n\n  dequeue() {\n    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {\n      if (this._slots[i].length) {\n        return this._slots[i].shift();\n      }\n    }\n    return;\n  }\n\n  get head() {\n    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {\n      if (this._slots[i].length > 0) {\n        return this._slots[i].head;\n      }\n    }\n    return;\n  }\n\n  get tail() {\n    for (let i = this._slots.length - 1; i >= 0; i--) {\n      if (this._slots[i].length > 0) {\n        return this._slots[i].tail;\n      }\n    }\n    return;\n  }\n}\n\nmodule.exports = PriorityQueue;\n","const FilterError = require('./errors/filter');\nconst Model = require('./model');\nconst NField = require('./schemas/nfield');\nconst compose = require('koa-compose');\n\nclass Schema {\n  constructor ({ name, fields = [], observers = [], modelClass = Model }) {\n    if (!name) {\n      throw new Error('Schema name is required');\n    }\n\n    this.name = name;\n    this.fields = fields;\n    this.observers = [];\n    this.modelClass = modelClass;\n    this.attributes = {};\n\n    observers.forEach(observer => this.addObserver(observer));\n  }\n\n  set (key, value) {\n    this.attributes[key] = value;\n    return this;\n  }\n\n  get (key) {\n    return this.attributes[key];\n  }\n\n  getField (name) {\n    return this.fields.find(f => f.name === name) || new NField(name);\n  }\n\n  addField (field) {\n    let existingField = this.fields.find(f => f.name === field.name);\n    if (existingField) {\n      return;\n    }\n\n    this.fields.push(field);\n  }\n\n  addObserver (observer) {\n    if ('initialize' in observer) {\n      observer.initialize(this);\n    }\n    this.observers.push(observer);\n  }\n\n  attach (row, partial = false) {\n    let Model = this.modelClass;\n\n    this.fields.forEach(field => {\n      switch (row[field.name]) {\n        case undefined:\n          if (!partial) {\n            row[field.name] = null;\n          }\n          break;\n        case null:\n          row[field.name] = null;\n          break;\n        default:\n          row[field.name] = field.attach(row[field.name]);\n      }\n    });\n\n    return new Model(row);\n  }\n\n  observe (ctx, next) {\n    if (!this._observerRunner) {\n      let units = this.observers.map(observer => {\n        return (ctx, next) => {\n          if (typeof observer[ctx.query.mode] !== 'function') {\n            return next();\n          }\n          return observer[ctx.query.mode](ctx, next);\n        };\n      });\n\n      this._observerRunner = compose(units);\n    }\n\n    return this._observerRunner(ctx, next);\n  }\n\n  async filter (row, { session, partial = false }) {\n    const error = new FilterError();\n\n    if (!row) {\n      error.add(new Error('Cannot filter empty row'));\n      throw error;\n    }\n\n    await Promise.all(this.fields.map(async field => {\n      try {\n        if (partial && row[field.name] === undefined) {\n          return;\n        }\n\n        row[field.name] = await field.execFilter(row[field.name], { session, row, schema: this });\n      } catch (err) {\n        err.field = field;\n        error.add(err);\n      }\n    }));\n\n    if (!error.empty()) {\n      throw error;\n    }\n\n    return row;\n  }\n}\n\nmodule.exports = Schema;\n","class Model {\n  constructor (row) {\n    for (let key in row) {\n      if (!row.hasOwnProperty(key) || row[key] === undefined) {\n        continue;\n      }\n\n      this[key] = row[key];\n    }\n  }\n}\n\nmodule.exports = Model;\n","class Query {\n  constructor (options) {\n    if (options instanceof Query) {\n      this.session = options.session;\n      this.connection = options.connection;\n      this.schema = options.schema;\n      this.find(options.criteria);\n\n      this.length = options.length;\n      this.offset = options.offset;\n      this.sorts = options.sorts;\n\n      return;\n    }\n\n    let { session, schema, criteria } = options;\n\n    this.session = session;\n\n    [ this.connection, this.schema ] = this.session.parseSchema(schema);\n\n    this.find(criteria);\n\n    this.rows = [];\n    this.sets = {};\n    this.length = -1;\n    this.offset = 0;\n    this.sorts = undefined;\n  }\n\n  clone () {\n    return new Query(this);\n  }\n\n  find (criteria = {}) {\n    this.criteria = typeof criteria === 'object' ? criteria : { id: criteria };\n\n    return this;\n  }\n\n  insert (row) {\n    this.mode = 'insert';\n    this.rows.push(this.schema.attach(row));\n\n    return this;\n  }\n\n  sort (sorts) {\n    this.sorts = sorts;\n\n    return this;\n  }\n\n  limit (length) {\n    this.length = length;\n\n    return this;\n  }\n\n  skip (offset) {\n    this.offset = offset;\n\n    return this;\n  }\n\n  set (set) {\n    this.mode = 'update';\n    this.sets = this.schema.attach(set, true);\n\n    return this;\n  }\n\n  async delete ({ observer = true } = {}) {\n    this.mode = 'delete';\n\n    let ctx = { query: this };\n\n    if (observer) {\n      await this.schema.observe(ctx, ctx => this._delete(ctx));\n    } else {\n      await this._delete(ctx);\n    }\n\n    return ctx.result;\n  }\n\n  async _delete () {\n    const connection = await this.session.acquire(this.connection);\n    let result = await connection.delete(this);\n    return result;\n  }\n\n  async save ({ filter = true, observer = true } = {}) {\n    let ctx = { query: this, filter };\n\n    if (observer) {\n      await this.schema.observe(ctx, ctx => this._save(ctx));\n    } else {\n      await this._save(ctx);\n    }\n\n    return this;\n  }\n\n  async _save (ctx) {\n    const connection = await this.session.acquire(this.connection);\n    let { session } = this;\n    let { filter } = ctx;\n\n    if (this.rows.length) {\n      if (filter) {\n        await Promise.all(this.rows.map(row => this.schema.filter(row, { session })));\n      }\n\n      let rows = [];\n      this.affected = await connection.insert(this, row => rows.push(this.schema.attach(row)));\n      this.rows = rows;\n    } else {\n      if (filter) {\n        let partial = true;\n        await this.schema.filter(this.sets, { session, partial });\n      }\n\n      this.affected = await connection.update(this);\n    }\n  }\n\n  async drop () {\n    const connection = await this.session.acquire(this.connection);\n    let result = await connection.drop(this);\n    return result;\n  }\n\n  async truncate () {\n    const connection = await this.session.acquire(this.connection);\n    let result = await connection.truncate(this);\n    return result;\n  }\n\n  async all () {\n    let rows = [];\n    const connection = await this.session.acquire(this.connection);\n    await connection.load(this, row => rows.push(this.schema.attach(row)));\n    return rows;\n  }\n\n  async count (useSkipAndLimit = false) {\n    const connection = await this.session.acquire(this.connection);\n    if (typeof connection.count !== 'function') {\n      throw new Error('Connection does not implement method count');\n    }\n    return connection.count(this, useSkipAndLimit);\n  }\n\n  async single () {\n    let [ row ] = await this.limit(1).all();\n    return row;\n  }\n\n  getInsertedRows () {\n    return this.rows;\n  }\n}\n\nmodule.exports = Query;\n","const Manager = require('./manager');\nconst Filter = require('./filter');\nconst Connection = require('./connection');\nconst Pool = require('./pool');\nconst Model = require('./model');\nconst Schema = require('./schema');\nconst schemas = require('./schemas');\nconst Query = require('./query');\n\nconst lib = {\n  Manager,\n  Connection,\n  Model,\n  Pool,\n  Query,\n  Filter,\n  Schema,\n  schemas,\n};\n\nif (typeof window !== 'undefined') {\n  window.norm = lib;\n}\n\nmodule.exports = lib;\n","const Pool = require('./pool');\nconst Session = require('./session');\n\nclass Manager {\n  static adapter (ctr) {\n    if (typeof ctr === 'function') {\n      return ctr;\n    }\n\n    throw new Error('Adapter must be a constructor');\n  }\n\n  constructor ({ connections = [] } = {}) {\n    this.pools = {};\n    this.main = '';\n\n    connections.forEach(connection => this.putPool(connection));\n  }\n\n  putPool (config) {\n    // resolve adapter first before creating\n    config.adapter = Manager.adapter(config.adapter);\n\n    let pool = new Pool(config);\n    this.pools[pool.name] = pool;\n    this.main = config.main ? pool.name : (this.main || pool.name);\n\n    return this;\n  }\n\n  /**\n   * Getter pool\n   *\n   * @param {string} name\n   * @returns {Pool}\n   */\n  getPool (name) {\n    if (this.main === '') {\n      this.putPool({});\n    }\n\n    name = `${name || this.main}`;\n    if (!this.pools[name]) {\n      throw new Error(`Pool '${name}' not found`);\n    }\n\n    return this.pools[name];\n  }\n\n  async runSession (fn, options) {\n    const session = this.openSession(options);\n    try {\n      const result = await fn(session);\n      await session.close();\n      await session.dispose();\n      return result;\n    } catch (err) {\n      await session.dispose();\n      throw err;\n    }\n  }\n\n  openSession (options) {\n    return new Session({ manager: this, options });\n  }\n\n  async end () {\n    await Promise.all(Object.keys(this.pools).map(async name => {\n      let pool = this.pools[name];\n      await pool.drain();\n      await pool.clear();\n    }));\n\n    this.pools = {};\n  }\n}\n\nmodule.exports = Manager;\n","const Pool = require(\"./lib/Pool\");\nconst Deque = require(\"./lib/Deque\");\nconst PriorityQueue = require(\"./lib/PriorityQueue\");\nconst DefaultEvictor = require(\"./lib/DefaultEvictor\");\nmodule.exports = {\n  Pool: Pool,\n  Deque: Deque,\n  PriorityQueue: PriorityQueue,\n  DefaultEvictor: DefaultEvictor,\n  createPool: function(factory, config) {\n    return new Pool(DefaultEvictor, Deque, PriorityQueue, factory, config);\n  }\n};\n","\"use strict\";\n\nconst EventEmitter = require(\"events\").EventEmitter;\n\nconst factoryValidator = require(\"./factoryValidator\");\nconst PoolOptions = require(\"./PoolOptions\");\nconst ResourceRequest = require(\"./ResourceRequest\");\nconst ResourceLoan = require(\"./ResourceLoan\");\nconst PooledResource = require(\"./PooledResource\");\nconst DefaultEvictor = require(\"./DefaultEvictor\");\nconst Deque = require(\"./Deque\");\nconst Deferred = require(\"./Deferred\");\nconst PriorityQueue = require(\"./PriorityQueue\");\nconst DequeIterator = require(\"./DequeIterator\");\n\nconst reflector = require(\"./utils\").reflector;\n\n/**\n * TODO: move me\n */\nconst FACTORY_CREATE_ERROR = \"factoryCreateError\";\nconst FACTORY_DESTROY_ERROR = \"factoryDestroyError\";\n\nclass Pool extends EventEmitter {\n  /**\n   * Generate an Object pool with a specified `factory` and `config`.\n   *\n   * @param {typeof DefaultEvictor} Evictor\n   * @param {typeof Deque} Deque\n   * @param {typeof PriorityQueue} PriorityQueue\n   * @param {Object} factory\n   *   Factory to be used for generating and destroying the items.\n   * @param {Function} factory.create\n   *   Should create the item to be acquired,\n   *   and call it's first callback argument with the generated item as it's argument.\n   * @param {Function} factory.destroy\n   *   Should gently close any resources that the item is using.\n   *   Called before the items is destroyed.\n   * @param {Function} factory.validate\n   *   Test if a resource is still valid .Should return a promise that resolves to a boolean, true if resource is still valid and false\n   *   If it should be removed from pool.\n   * @param {Object} options\n   */\n  constructor(Evictor, Deque, PriorityQueue, factory, options) {\n    super();\n\n    factoryValidator(factory);\n\n    this._config = new PoolOptions(options);\n\n    // TODO: fix up this ugly glue-ing\n    this._Promise = this._config.Promise;\n\n    this._factory = factory;\n    this._draining = false;\n    this._started = false;\n    /**\n     * Holds waiting clients\n     * @type {PriorityQueue}\n     */\n    this._waitingClientsQueue = new PriorityQueue(this._config.priorityRange);\n\n    /**\n     * Collection of promises for resource creation calls made by the pool to factory.create\n     * @type {Set}\n     */\n    this._factoryCreateOperations = new Set();\n\n    /**\n     * Collection of promises for resource destruction calls made by the pool to factory.destroy\n     * @type {Set}\n     */\n    this._factoryDestroyOperations = new Set();\n\n    /**\n     * A queue/stack of pooledResources awaiting acquisition\n     * TODO: replace with LinkedList backed array\n     * @type {Deque}\n     */\n    this._availableObjects = new Deque();\n\n    /**\n     * Collection of references for any resource that are undergoing validation before being acquired\n     * @type {Set}\n     */\n    this._testOnBorrowResources = new Set();\n\n    /**\n     * Collection of references for any resource that are undergoing validation before being returned\n     * @type {Set}\n     */\n    this._testOnReturnResources = new Set();\n\n    /**\n     * Collection of promises for any validations currently in process\n     * @type {Set}\n     */\n    this._validationOperations = new Set();\n\n    /**\n     * All objects associated with this pool in any state (except destroyed)\n     * @type {Set}\n     */\n    this._allObjects = new Set();\n\n    /**\n     * Loans keyed by the borrowed resource\n     * @type {Map}\n     */\n    this._resourceLoans = new Map();\n\n    /**\n     * Infinitely looping iterator over available object\n     * @type {DequeIterator}\n     */\n    this._evictionIterator = this._availableObjects.iterator();\n\n    this._evictor = new Evictor();\n\n    /**\n     * handle for setTimeout for next eviction run\n     * @type {(number|null)}\n     */\n    this._scheduledEviction = null;\n\n    // create initial resources (if factory.min > 0)\n    if (this._config.autostart === true) {\n      this.start();\n    }\n  }\n\n  _destroy(pooledResource) {\n    // FIXME: do we need another state for \"in destruction\"?\n    pooledResource.invalidate();\n    this._allObjects.delete(pooledResource);\n    // NOTE: this maybe very bad promise usage?\n    const destroyPromise = this._factory.destroy(pooledResource.obj);\n    const wrappedDestroyPromise = this._Promise.resolve(destroyPromise);\n\n    this._trackOperation(\n      wrappedDestroyPromise,\n      this._factoryDestroyOperations\n    ).catch(reason => {\n      this.emit(FACTORY_DESTROY_ERROR, reason);\n    });\n\n    // TODO: maybe ensuring minimum pool size should live outside here\n    this._ensureMinimum();\n  }\n\n  /**\n   * Attempt to move an available resource into test and then onto a waiting client\n   * @return {Boolean} could we move an available resource into test\n   */\n  _testOnBorrow() {\n    if (this._availableObjects.length < 1) {\n      return false;\n    }\n\n    const pooledResource = this._availableObjects.shift();\n    // Mark the resource as in test\n    pooledResource.test();\n    this._testOnBorrowResources.add(pooledResource);\n    const validationPromise = this._factory.validate(pooledResource.obj);\n    const wrappedValidationPromise = this._Promise.resolve(validationPromise);\n\n    this._trackOperation(\n      wrappedValidationPromise,\n      this._validationOperations\n    ).then(isValid => {\n      this._testOnBorrowResources.delete(pooledResource);\n\n      if (isValid === false) {\n        pooledResource.invalidate();\n        this._destroy(pooledResource);\n        this._dispense();\n        return;\n      }\n      this._dispatchPooledResourceToNextWaitingClient(pooledResource);\n    });\n\n    return true;\n  }\n\n  /**\n   * Attempt to move an available resource to a waiting client\n   * @return {Boolean} [description]\n   */\n  _dispatchResource() {\n    if (this._availableObjects.length < 1) {\n      return false;\n    }\n\n    const pooledResource = this._availableObjects.shift();\n    this._dispatchPooledResourceToNextWaitingClient(pooledResource);\n    return false;\n  }\n\n  /**\n   * Attempt to resolve an outstanding resource request using an available resource from\n   * the pool, or creating new ones\n   *\n   * @private\n   */\n  _dispense() {\n    /**\n     * Local variables for ease of reading/writing\n     * these don't (shouldn't) change across the execution of this fn\n     */\n    const numWaitingClients = this._waitingClientsQueue.length;\n\n    // If there aren't any waiting requests then there is nothing to do\n    // so lets short-circuit\n    if (numWaitingClients < 1) {\n      return;\n    }\n\n    const resourceShortfall =\n      numWaitingClients - this._potentiallyAllocableResourceCount;\n\n    const actualNumberOfResourcesToCreate = Math.min(\n      this.spareResourceCapacity,\n      resourceShortfall\n    );\n    for (let i = 0; actualNumberOfResourcesToCreate > i; i++) {\n      this._createResource();\n    }\n\n    // If we are doing test-on-borrow see how many more resources need to be moved into test\n    // to help satisfy waitingClients\n    if (this._config.testOnBorrow === true) {\n      // how many available resources do we need to shift into test\n      const desiredNumberOfResourcesToMoveIntoTest =\n        numWaitingClients - this._testOnBorrowResources.size;\n      const actualNumberOfResourcesToMoveIntoTest = Math.min(\n        this._availableObjects.length,\n        desiredNumberOfResourcesToMoveIntoTest\n      );\n      for (let i = 0; actualNumberOfResourcesToMoveIntoTest > i; i++) {\n        this._testOnBorrow();\n      }\n    }\n\n    // if we aren't testing-on-borrow then lets try to allocate what we can\n    if (this._config.testOnBorrow === false) {\n      const actualNumberOfResourcesToDispatch = Math.min(\n        this._availableObjects.length,\n        numWaitingClients\n      );\n      for (let i = 0; actualNumberOfResourcesToDispatch > i; i++) {\n        this._dispatchResource();\n      }\n    }\n  }\n\n  /**\n   * Dispatches a pooledResource to the next waiting client (if any) else\n   * puts the PooledResource back on the available list\n   * @param  {PooledResource} pooledResource [description]\n   * @return {Boolean}                [description]\n   */\n  _dispatchPooledResourceToNextWaitingClient(pooledResource) {\n    const clientResourceRequest = this._waitingClientsQueue.dequeue();\n    if (\n      clientResourceRequest === undefined ||\n      clientResourceRequest.state !== Deferred.PENDING\n    ) {\n      // While we were away either all the waiting clients timed out\n      // or were somehow fulfilled. put our pooledResource back.\n      this._addPooledResourceToAvailableObjects(pooledResource);\n      // TODO: do need to trigger anything before we leave?\n      return false;\n    }\n    const loan = new ResourceLoan(pooledResource, this._Promise);\n    this._resourceLoans.set(pooledResource.obj, loan);\n    pooledResource.allocate();\n    clientResourceRequest.resolve(pooledResource.obj);\n    return true;\n  }\n\n  /**\n   * tracks on operation using given set\n   * handles adding/removing from the set and resolve/rejects the value/reason\n   * @param  {Promise} operation\n   * @param  {Set} set       Set holding operations\n   * @return {Promise}       Promise that resolves once operation has been removed from set\n   */\n  _trackOperation(operation, set) {\n    set.add(operation);\n\n    return operation.then(\n      v => {\n        set.delete(operation);\n        return this._Promise.resolve(v);\n      },\n      e => {\n        set.delete(operation);\n        return this._Promise.reject(e);\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createResource() {\n    // An attempt to create a resource\n    const factoryPromise = this._factory.create();\n    const wrappedFactoryPromise = this._Promise.resolve(factoryPromise);\n\n    this._trackOperation(wrappedFactoryPromise, this._factoryCreateOperations)\n      .then(resource => {\n        this._handleNewResource(resource);\n        return null;\n      })\n      .catch(reason => {\n        this.emit(FACTORY_CREATE_ERROR, reason);\n        this._dispense();\n      });\n  }\n\n  _handleNewResource(resource) {\n    const pooledResource = new PooledResource(resource);\n    this._allObjects.add(pooledResource);\n    // TODO: check we aren't exceding our maxPoolSize before doing\n    this._dispatchPooledResourceToNextWaitingClient(pooledResource);\n  }\n\n  /**\n   * @private\n   */\n  _ensureMinimum() {\n    if (this._draining === true) {\n      return;\n    }\n    const minShortfall = this._config.min - this._count;\n    for (let i = 0; i < minShortfall; i++) {\n      this._createResource();\n    }\n  }\n\n  _evict() {\n    const testsToRun = Math.min(\n      this._config.numTestsPerEvictionRun,\n      this._availableObjects.length\n    );\n    const evictionConfig = {\n      softIdleTimeoutMillis: this._config.softIdleTimeoutMillis,\n      idleTimeoutMillis: this._config.idleTimeoutMillis,\n      min: this._config.min\n    };\n    for (let testsHaveRun = 0; testsHaveRun < testsToRun; ) {\n      const iterationResult = this._evictionIterator.next();\n\n      // Safety check incase we could get stuck in infinite loop because we\n      // somehow emptied the array after chekcing it's length\n      if (iterationResult.done === true && this._availableObjects.length < 1) {\n        this._evictionIterator.reset();\n        return;\n      }\n      // if this happens it should just mean we reached the end of the\n      // list and can reset the cursor.\n      if (iterationResult.done === true && this._availableObjects.length > 0) {\n        this._evictionIterator.reset();\n        break;\n      }\n\n      const resource = iterationResult.value;\n\n      const shouldEvict = this._evictor.evict(\n        evictionConfig,\n        resource,\n        this._availableObjects.length\n      );\n      testsHaveRun++;\n\n      if (shouldEvict === true) {\n        // take it out of the _availableObjects list\n        this._evictionIterator.remove();\n        this._destroy(resource);\n      }\n    }\n  }\n\n  _scheduleEvictorRun() {\n    // Start eviction if set\n    if (this._config.evictionRunIntervalMillis > 0) {\n      // @ts-ignore\n      this._scheduledEviction = setTimeout(() => {\n        this._evict();\n        this._scheduleEvictorRun();\n      }, this._config.evictionRunIntervalMillis);\n    }\n  }\n\n  _descheduleEvictorRun() {\n    if (this._scheduledEviction) {\n      clearTimeout(this._scheduledEviction);\n    }\n    this._scheduledEviction = null;\n  }\n\n  start() {\n    if (this._draining === true) {\n      return;\n    }\n    if (this._started === true) {\n      return;\n    }\n    this._started = true;\n    this._scheduleEvictorRun();\n    this._ensureMinimum();\n  }\n\n  /**\n   * Request a new resource. The callback will be called,\n   * when a new resource is available, passing the resource to the callback.\n   * TODO: should we add a seperate \"acquireWithPriority\" function\n   *\n   * @param {Number} [priority=0]\n   *   Optional.  Integer between 0 and (priorityRange - 1).  Specifies the priority\n   *   of the caller if there are no available resources.  Lower numbers mean higher\n   *   priority.\n   *\n   * @returns {Promise}\n   */\n  acquire(priority) {\n    if (this._started === false && this._config.autostart === false) {\n      this.start();\n    }\n\n    if (this._draining) {\n      return this._Promise.reject(\n        new Error(\"pool is draining and cannot accept work\")\n      );\n    }\n\n    // TODO: should we defer this check till after this event loop incase \"the situation\" changes in the meantime\n    if (\n      this._config.maxWaitingClients !== undefined &&\n      this._waitingClientsQueue.length >= this._config.maxWaitingClients\n    ) {\n      return this._Promise.reject(\n        new Error(\"max waitingClients count exceeded\")\n      );\n    }\n\n    const resourceRequest = new ResourceRequest(\n      this._config.acquireTimeoutMillis,\n      this._Promise\n    );\n    this._waitingClientsQueue.enqueue(resourceRequest, priority);\n    this._dispense();\n\n    return resourceRequest.promise;\n  }\n\n  /**\n   * [use method, aquires a resource, passes the resource to a user supplied function and releases it]\n   * @param  {Function} fn [a function that accepts a resource and returns a promise that resolves/rejects once it has finished using the resource]\n   * @return {Promise}      [resolves once the resource is released to the pool]\n   */\n  use(fn) {\n    return this.acquire().then(resource => {\n      return fn(resource).then(\n        result => {\n          this.release(resource);\n          return result;\n        },\n        err => {\n          this.release(resource);\n          throw err;\n        }\n      );\n    });\n  }\n\n  /**\n   * Check if resource is currently on loan from the pool\n   *\n   * @param {Function} resource\n   *    Resource for checking.\n   *\n   * @returns {Boolean}\n   *  True if resource belongs to this pool and false otherwise\n   */\n  isBorrowedResource(resource) {\n    return this._resourceLoans.get(resource) !== undefined;\n  }\n\n  /**\n   * Return the resource to the pool when it is no longer required.\n   *\n   * @param {Object} resource\n   *   The acquired object to be put back to the pool.\n   */\n  release(resource) {\n    // check for an outstanding loan\n    const loan = this._resourceLoans.get(resource);\n\n    if (loan === undefined) {\n      return this._Promise.reject(\n        new Error(\"Resource not currently part of this pool\")\n      );\n    }\n\n    this._resourceLoans.delete(resource);\n    loan.resolve();\n    const pooledResource = loan.pooledResource;\n\n    pooledResource.deallocate();\n    this._addPooledResourceToAvailableObjects(pooledResource);\n\n    this._dispense();\n    return this._Promise.resolve();\n  }\n\n  /**\n   * Request the resource to be destroyed. The factory's destroy handler\n   * will also be called.\n   *\n   * This should be called within an acquire() block as an alternative to release().\n   *\n   * @param {Object} resource\n   *   The acquired resource to be destoyed.\n   */\n  destroy(resource) {\n    // check for an outstanding loan\n    const loan = this._resourceLoans.get(resource);\n\n    if (loan === undefined) {\n      return this._Promise.reject(\n        new Error(\"Resource not currently part of this pool\")\n      );\n    }\n\n    this._resourceLoans.delete(resource);\n    loan.resolve();\n    const pooledResource = loan.pooledResource;\n\n    pooledResource.deallocate();\n    this._destroy(pooledResource);\n\n    this._dispense();\n    return this._Promise.resolve();\n  }\n\n  _addPooledResourceToAvailableObjects(pooledResource) {\n    pooledResource.idle();\n    if (this._config.fifo === true) {\n      this._availableObjects.push(pooledResource);\n    } else {\n      this._availableObjects.unshift(pooledResource);\n    }\n  }\n\n  /**\n   * Disallow any new acquire calls and let the request backlog dissapate.\n   * The Pool will no longer attempt to maintain a \"min\" number of resources\n   * and will only make new resources on demand.\n   * Resolves once all resource requests are fulfilled and all resources are returned to pool and available...\n   * Should probably be called \"drain work\"\n   * @returns {Promise}\n   */\n  drain() {\n    this._draining = true;\n    return this.__allResourceRequestsSettled()\n      .then(() => {\n        return this.__allResourcesReturned();\n      })\n      .then(() => {\n        this._descheduleEvictorRun();\n      });\n  }\n\n  __allResourceRequestsSettled() {\n    if (this._waitingClientsQueue.length > 0) {\n      // wait for last waiting client to be settled\n      // FIXME: what if they can \"resolve\" out of order....?\n      return reflector(this._waitingClientsQueue.tail.promise);\n    }\n    return this._Promise.resolve();\n  }\n\n  // FIXME: this is a horrific mess\n  __allResourcesReturned() {\n    const ps = Array.from(this._resourceLoans.values())\n      .map(loan => loan.promise)\n      .map(reflector);\n    return this._Promise.all(ps);\n  }\n\n  /**\n   * Forcibly destroys all available resources regardless of timeout.  Intended to be\n   * invoked as part of a drain.  Does not prevent the creation of new\n   * resources as a result of subsequent calls to acquire.\n   *\n   * Note that if factory.min > 0 and the pool isn't \"draining\", the pool will destroy all idle resources\n   * in the pool, but replace them with newly created resources up to the\n   * specified factory.min value.  If this is not desired, set factory.min\n   * to zero before calling clear()\n   *\n   */\n  clear() {\n    const reflectedCreatePromises = Array.from(\n      this._factoryCreateOperations\n    ).map(reflector);\n\n    // wait for outstanding factory.create to complete\n    return this._Promise.all(reflectedCreatePromises).then(() => {\n      // Destroy existing resources\n      // @ts-ignore\n      for (const resource of this._availableObjects) {\n        this._destroy(resource);\n      }\n      const reflectedDestroyPromises = Array.from(\n        this._factoryDestroyOperations\n      ).map(reflector);\n      return this._Promise.all(reflectedDestroyPromises);\n    });\n  }\n\n  /**\n   * How many resources are available to allocated\n   * (includes resources that have not been tested and may faul validation)\n   * NOTE: internal for now as the name is awful and might not be useful to anyone\n   * @return {Number} number of resources the pool has to allocate\n   */\n  get _potentiallyAllocableResourceCount() {\n    return (\n      this._availableObjects.length +\n      this._testOnBorrowResources.size +\n      this._testOnReturnResources.size +\n      this._factoryCreateOperations.size\n    );\n  }\n\n  /**\n   * The combined count of the currently created objects and those in the\n   * process of being created\n   * Does NOT include resources in the process of being destroyed\n   * sort of legacy...\n   * @return {Number}\n   */\n  get _count() {\n    return this._allObjects.size + this._factoryCreateOperations.size;\n  }\n\n  /**\n   * How many more resources does the pool have room for\n   * @return {Number} number of resources the pool could create before hitting any limits\n   */\n  get spareResourceCapacity() {\n    return (\n      this._config.max -\n      (this._allObjects.size + this._factoryCreateOperations.size)\n    );\n  }\n\n  /**\n   * see _count above\n   * @return {Number} [description]\n   */\n  get size() {\n    return this._count;\n  }\n\n  /**\n   * number of available resources\n   * @return {Number} [description]\n   */\n  get available() {\n    return this._availableObjects.length;\n  }\n\n  /**\n   * number of resources that are currently acquired\n   * @return {Number} [description]\n   */\n  get borrowed() {\n    return this._resourceLoans.size;\n  }\n\n  /**\n   * number of waiting acquire calls\n   * @return {Number} [description]\n   */\n  get pending() {\n    return this._waitingClientsQueue.length;\n  }\n\n  /**\n   * maximum size of the pool\n   * @return {Number} [description]\n   */\n  get max() {\n    return this._config.max;\n  }\n\n  /**\n   * minimum size of the pool\n   * @return {Number} [description]\n   */\n  get min() {\n    return this._config.min;\n  }\n}\n\nmodule.exports = Pool;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","module.exports = function(factory) {\n  if (typeof factory.create !== \"function\") {\n    throw new TypeError(\"factory.create must be a function\");\n  }\n\n  if (typeof factory.destroy !== \"function\") {\n    throw new TypeError(\"factory.destroy must be a function\");\n  }\n\n  if (\n    typeof factory.validate !== \"undefined\" &&\n    typeof factory.validate !== \"function\"\n  ) {\n    throw new TypeError(\"factory.validate must be a function\");\n  }\n};\n","\"use strict\";\n\nconst PoolDefaults = require(\"./PoolDefaults\");\n\nclass PoolOptions {\n  /**\n   * @param {Object} opts\n   *   configuration for the pool\n   * @param {Number} [opts.max=null]\n   *   Maximum number of items that can exist at the same time.  Default: 1.\n   *   Any further acquire requests will be pushed to the waiting list.\n   * @param {Number} [opts.min=null]\n   *   Minimum number of items in pool (including in-use). Default: 0.\n   *   When the pool is created, or a resource destroyed, this minimum will\n   *   be checked. If the pool resource count is below the minimum, a new\n   *   resource will be created and added to the pool.\n   * @param {Number} [opts.maxWaitingClients=null]\n   *   maximum number of queued requests allowed after which acquire calls will be rejected\n   * @param {Boolean} [opts.testOnBorrow=false]\n   *   should the pool validate resources before giving them to clients. Requires that either\n   *   `factory.validate` or `factory.validateAsync` to be specified.\n   * @param {Boolean} [opts.testOnReturn=false]\n   *   should the pool validate resources before returning them to the pool.\n   * @param {Number} [opts.acquireTimeoutMillis=null]\n   *   Delay in milliseconds after which the an `acquire` call will fail. optional.\n   *   Default: undefined. Should be positive and non-zero\n   * @param {Number} [opts.priorityRange=1]\n   *   The range from 1 to be treated as a valid priority\n   * @param {Boolean} [opts.fifo=true]\n   *   Sets whether the pool has LIFO (last in, first out) behaviour with respect to idle objects.\n   *   if false then pool has FIFO behaviour\n   * @param {Boolean} [opts.autostart=true]\n   *   Should the pool start creating resources etc once the constructor is called\n   * @param {Number} [opts.evictionRunIntervalMillis=0]\n   *   How often to run eviction checks.  Default: 0 (does not run).\n   * @param {Number} [opts.numTestsPerEvictionRun=3]\n   *   Number of resources to check each eviction run.  Default: 3.\n   * @param {Number} [opts.softIdleTimeoutMillis=-1]\n   *   amount of time an object may sit idle in the pool before it is eligible\n   *   for eviction by the idle object evictor (if any), with the extra condition\n   *   that at least \"min idle\" object instances remain in the pool. Default -1 (nothing can get evicted)\n   * @param {Number} [opts.idleTimeoutMillis=30000]\n   *   the minimum amount of time that an object may sit idle in the pool before it is eligible for eviction\n   *   due to idle time. Supercedes \"softIdleTimeoutMillis\" Default: 30000\n   * @param {typeof Promise} [opts.Promise=Promise]\n   *   What promise implementation should the pool use, defaults to native promises.\n   */\n  constructor(opts) {\n    const poolDefaults = new PoolDefaults();\n\n    opts = opts || {};\n\n    this.fifo = typeof opts.fifo === \"boolean\" ? opts.fifo : poolDefaults.fifo;\n    this.priorityRange = opts.priorityRange || poolDefaults.priorityRange;\n\n    this.testOnBorrow =\n      typeof opts.testOnBorrow === \"boolean\"\n        ? opts.testOnBorrow\n        : poolDefaults.testOnBorrow;\n    this.testOnReturn =\n      typeof opts.testOnReturn === \"boolean\"\n        ? opts.testOnReturn\n        : poolDefaults.testOnReturn;\n\n    this.autostart =\n      typeof opts.autostart === \"boolean\"\n        ? opts.autostart\n        : poolDefaults.autostart;\n\n    if (opts.acquireTimeoutMillis) {\n      // @ts-ignore\n      this.acquireTimeoutMillis = parseInt(opts.acquireTimeoutMillis, 10);\n    }\n\n    if (opts.maxWaitingClients) {\n      // @ts-ignore\n      this.maxWaitingClients = parseInt(opts.maxWaitingClients, 10);\n    }\n\n    // @ts-ignore\n    this.max = parseInt(opts.max, 10);\n    // @ts-ignore\n    this.min = parseInt(opts.min, 10);\n\n    this.max = Math.max(isNaN(this.max) ? 1 : this.max, 1);\n    this.min = Math.min(isNaN(this.min) ? 0 : this.min, this.max);\n\n    this.evictionRunIntervalMillis =\n      opts.evictionRunIntervalMillis || poolDefaults.evictionRunIntervalMillis;\n    this.numTestsPerEvictionRun =\n      opts.numTestsPerEvictionRun || poolDefaults.numTestsPerEvictionRun;\n    this.softIdleTimeoutMillis =\n      opts.softIdleTimeoutMillis || poolDefaults.softIdleTimeoutMillis;\n    this.idleTimeoutMillis =\n      opts.idleTimeoutMillis || poolDefaults.idleTimeoutMillis;\n\n    this.Promise = opts.Promise != null ? opts.Promise : poolDefaults.Promise;\n  }\n}\n\nmodule.exports = PoolOptions;\n","\"use strict\";\n/**\n * Create the default settings used by the pool\n *\n * @class\n */\nclass PoolDefaults {\n  constructor() {\n    this.fifo = true;\n    this.priorityRange = 1;\n\n    this.testOnBorrow = false;\n    this.testOnReturn = false;\n\n    this.autostart = true;\n\n    this.evictionRunIntervalMillis = 0;\n    this.numTestsPerEvictionRun = 3;\n    this.softIdleTimeoutMillis = -1;\n    this.idleTimeoutMillis = 30000;\n\n    // FIXME: no defaults!\n    this.acquireTimeoutMillis = null;\n    this.maxWaitingClients = null;\n\n    this.min = null;\n    this.max = null;\n    // FIXME: this seems odd?\n    this.Promise = Promise;\n  }\n}\n\nmodule.exports = PoolDefaults;\n","\"use strict\";\n\nconst Deferred = require(\"./Deferred\");\nconst errors = require(\"./errors\");\n\nfunction fbind(fn, ctx) {\n  return function bound() {\n    return fn.apply(ctx, arguments);\n  };\n}\n\n/**\n * Wraps a users request for a resource\n * Basically a promise mashed in with a timeout\n * @private\n */\nclass ResourceRequest extends Deferred {\n  /**\n   * [constructor description]\n   * @param  {Number} ttl     timeout\n   */\n  constructor(ttl, Promise) {\n    super(Promise);\n    this._creationTimestamp = Date.now();\n    this._timeout = null;\n\n    if (ttl !== undefined) {\n      this.setTimeout(ttl);\n    }\n  }\n\n  setTimeout(delay) {\n    if (this._state !== ResourceRequest.PENDING) {\n      return;\n    }\n    const ttl = parseInt(delay, 10);\n\n    if (isNaN(ttl) || ttl <= 0) {\n      throw new Error(\"delay must be a positive int\");\n    }\n\n    const age = Date.now() - this._creationTimestamp;\n\n    if (this._timeout) {\n      this.removeTimeout();\n    }\n\n    this._timeout = setTimeout(\n      fbind(this._fireTimeout, this),\n      Math.max(ttl - age, 0)\n    );\n  }\n\n  removeTimeout() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n    this._timeout = null;\n  }\n\n  _fireTimeout() {\n    this.reject(new errors.TimeoutError(\"ResourceRequest timed out\"));\n  }\n\n  reject(reason) {\n    this.removeTimeout();\n    super.reject(reason);\n  }\n\n  resolve(value) {\n    this.removeTimeout();\n    super.resolve(value);\n  }\n}\n\nmodule.exports = ResourceRequest;\n","\"use strict\";\n\nclass ExtendableError extends Error {\n  constructor(message) {\n    super(message);\n    // @ts-ignore\n    this.name = this.constructor.name;\n    this.message = message;\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n  }\n}\n\n/* eslint-disable no-useless-constructor */\nclass TimeoutError extends ExtendableError {\n  constructor(m) {\n    super(m);\n  }\n}\n/* eslint-enable no-useless-constructor */\n\nmodule.exports = {\n  TimeoutError: TimeoutError\n};\n","\"use strict\";\n\nconst Deferred = require(\"./Deferred\");\n\n/**\n * Plan is to maybe add tracking via Error objects\n * and other fun stuff!\n */\n\nclass ResourceLoan extends Deferred {\n  /**\n   *\n   * @param  {any} pooledResource the PooledResource this loan belongs to\n   * @return {any}                [description]\n   */\n  constructor(pooledResource, Promise) {\n    super(Promise);\n    this._creationTimestamp = Date.now();\n    this.pooledResource = pooledResource;\n  }\n\n  reject() {\n    /**\n     * Loans can only be resolved at the moment\n     */\n  }\n}\n\nmodule.exports = ResourceLoan;\n","\"use strict\";\n\nconst PooledResourceStateEnum = require(\"./PooledResourceStateEnum\");\n\n/**\n * @class\n * @private\n */\nclass PooledResource {\n  constructor(resource) {\n    this.creationTime = Date.now();\n    this.lastReturnTime = null;\n    this.lastBorrowTime = null;\n    this.lastIdleTime = null;\n    this.obj = resource;\n    this.state = PooledResourceStateEnum.IDLE;\n  }\n\n  // mark the resource as \"allocated\"\n  allocate() {\n    this.lastBorrowTime = Date.now();\n    this.state = PooledResourceStateEnum.ALLOCATED;\n  }\n\n  // mark the resource as \"deallocated\"\n  deallocate() {\n    this.lastReturnTime = Date.now();\n    this.state = PooledResourceStateEnum.IDLE;\n  }\n\n  invalidate() {\n    this.state = PooledResourceStateEnum.INVALID;\n  }\n\n  test() {\n    this.state = PooledResourceStateEnum.VALIDATION;\n  }\n\n  idle() {\n    this.lastIdleTime = Date.now();\n    this.state = PooledResourceStateEnum.IDLE;\n  }\n\n  returning() {\n    this.state = PooledResourceStateEnum.RETURNING;\n  }\n}\n\nmodule.exports = PooledResource;\n","\"use strict\";\n\nconst PooledResourceStateEnum = {\n  ALLOCATED: \"ALLOCATED\", // In use\n  IDLE: \"IDLE\", // In the queue, not in use.\n  INVALID: \"INVALID\", // Failed validation\n  RETURNING: \"RETURNING\", // Resource is in process of returning\n  VALIDATION: \"VALIDATION\" // Currently being tested\n};\n\nmodule.exports = PooledResourceStateEnum;\n","\"use strict\";\n\n/**\n * Creates an interator for a DoublyLinkedList starting at the given node\n * It's internal cursor will remains relative to the last \"iterated\" node as that\n * node moves through the list until it either iterates to the end of the list,\n * or the the node it's tracking is removed from the list. Until the first 'next'\n * call it tracks the head/tail of the linked list. This means that one can create\n * an iterator on an empty list, then add nodes, and then the iterator will follow\n * those nodes. Because the DoublyLinkedList nodes don't track their owning \"list\" and\n * it's highly inefficient to walk the list for every iteration, the iterator won't know\n * if the node has been detached from one List and added to another list, or if the iterator\n *\n * The created object is an es6 compatible iterator\n */\nclass DoublyLinkedListIterator {\n  /**\n   * @param  {Object} doublyLinkedList     a node that is part of a doublyLinkedList\n   * @param  {Boolean} [reverse=false]     is this a reverse iterator? default: false\n   */\n  constructor(doublyLinkedList, reverse) {\n    this._list = doublyLinkedList;\n    // NOTE: these key names are tied to the DoublyLinkedListIterator\n    this._direction = reverse === true ? \"prev\" : \"next\";\n    this._startPosition = reverse === true ? \"tail\" : \"head\";\n    this._started = false;\n    this._cursor = null;\n    this._done = false;\n  }\n\n  _start() {\n    this._cursor = this._list[this._startPosition];\n    this._started = true;\n  }\n\n  _advanceCursor() {\n    if (this._started === false) {\n      this._started = true;\n      this._cursor = this._list[this._startPosition];\n      return;\n    }\n    this._cursor = this._cursor[this._direction];\n  }\n\n  reset() {\n    this._done = false;\n    this._started = false;\n    this._cursor = null;\n  }\n\n  remove() {\n    if (\n      this._started === false ||\n      this._done === true ||\n      this._isCursorDetached()\n    ) {\n      return false;\n    }\n    this._list.remove(this._cursor);\n  }\n\n  next() {\n    if (this._done === true) {\n      return { done: true };\n    }\n\n    this._advanceCursor();\n\n    // if there is no node at the cursor or the node at the cursor is no longer part of\n    // a doubly linked list then we are done/finished/kaput\n    if (this._cursor === null || this._isCursorDetached()) {\n      this._done = true;\n      return { done: true };\n    }\n\n    return {\n      value: this._cursor,\n      done: false\n    };\n  }\n\n  /**\n   * Is the node detached from a list?\n   * NOTE: you can trick/bypass/confuse this check by removing a node from one DoublyLinkedList\n   * and adding it to another.\n   * TODO: We can make this smarter by checking the direction of travel and only checking\n   * the required next/prev/head/tail rather than all of them\n   * @return {Boolean}      [description]\n   */\n  _isCursorDetached() {\n    return (\n      this._cursor.prev === null &&\n      this._cursor.next === null &&\n      this._list.tail !== this._cursor &&\n      this._list.head !== this._cursor\n    );\n  }\n}\n\nmodule.exports = DoublyLinkedListIterator;\n","\"use strict\";\n\nconst DoublyLinkedList = require(\"./DoublyLinkedList\");\nconst Deque = require(\"./Deque\");\n\n/**\n * Sort of a internal queue for holding the waiting\n * resource requets for a given \"priority\".\n * Also handles managing timeouts rejections on items (is this the best place for this?)\n * This is the last point where we know which queue a resourceRequest is in\n *\n */\nclass Queue extends Deque {\n  /**\n   * Adds the obj to the end of the list for this slot\n   * we completely override the parent method because we need access to the\n   * node for our rejection handler\n   * @param {any} resourceRequest [description]\n   */\n  push(resourceRequest) {\n    const node = DoublyLinkedList.createNode(resourceRequest);\n    resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node));\n    this._list.insertEnd(node);\n  }\n\n  _createTimeoutRejectionHandler(node) {\n    return reason => {\n      if (reason.name === \"TimeoutError\") {\n        this._list.remove(node);\n      }\n    };\n  }\n}\n\nmodule.exports = Queue;\n","\"use strict\";\n\nfunction noop() {}\n\n/**\n * Reflects a promise but does not expose any\n * underlying value or rejection from that promise.\n * @param  {Promise} promise [description]\n * @return {Promise}         [description]\n */\nexports.reflector = function(promise) {\n  return promise.then(noop, noop);\n};\n","class Filter extends Error {\n  constructor () {\n    super();\n\n    this.status = 400;\n    this.children = [];\n  }\n\n  get message () {\n    return this.children.map(child => child.message).join(', ');\n  }\n\n  add (value) {\n    this.children.push(value);\n  }\n\n  empty () {\n    return this.children.length === 0;\n  }\n}\n\nmodule.exports = Filter;\n","'use strict'\n\n/**\n * Expose compositor.\n */\n\nmodule.exports = compose\n\n/**\n * Compose `middleware` returning\n * a fully valid middleware comprised\n * of all those which are passed.\n *\n * @param {Array} middleware\n * @return {Function}\n * @api public\n */\n\nfunction compose (middleware) {\n  if (!Array.isArray(middleware)) throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn !== 'function') throw new TypeError('Middleware must be composed of functions!')\n  }\n\n  /**\n   * @param {Object} context\n   * @return {Promise}\n   * @api public\n   */\n\n  return function (context, next) {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n    function dispatch (i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i === middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n","const Query = require('./query');\nconst Factory = require('async-factory');\nconst connectionFactory = new Factory();\n\nlet sessionNextId = 0;\n\nclass Session {\n  constructor ({ manager, options = {} }) {\n    this.id = `session-${sessionNextId++}`;\n    this.manager = manager;\n    this.connections = {};\n    this.state = Object.assign({}, options.state);\n  }\n\n  factory (schema, criteria) {\n    return new Query({ session: this, schema, criteria });\n  }\n\n  async acquire (name) {\n    let pool = this.manager.getPool(name);\n\n    if (!this.connections[pool.name]) {\n      let id = `${this.id}-${pool.name}`;\n      this.connections[pool.name] = await connectionFactory.singleton(id, () => pool.acquire());\n\n      await this.connections[pool.name].begin();\n    }\n\n    return this.connections[pool.name];\n  }\n\n  async dispose () {\n    await this.rollback();\n    await Promise.all(Object.keys(this.connections).map(name => {\n      return this.manager.getPool(name).release(this.connections[name]);\n    }));\n\n    this.connections = {};\n  }\n\n  close () {\n    return this.commit();\n  }\n\n  async commit () {\n    await Promise.all(Object.keys(this.connections).map(async name => {\n      let connection = this.connections[name];\n      await connection.commit();\n    }));\n  }\n\n  async rollback () {\n    await Promise.all(Object.keys(this.connections).map(async name => {\n      let connection = this.connections[name];\n      await connection.rollback();\n    }));\n  }\n\n  async begin () {\n    await Promise.all(Object.keys(this.connections).map(async name => {\n      let connection = this.connections[name];\n      await connection.begin();\n    }));\n  }\n\n  async flush () {\n    await this.commit();\n    await this.begin();\n  }\n\n  parseSchema (name) {\n    let connection;\n    let schema;\n    if (Array.isArray(name)) {\n      if (name.length < 2) {\n        throw new Error('Malformed schema name tupple');\n      }\n      [ connection, schema ] = name;\n    } else if (name.indexOf('.') !== -1) {\n      [ connection, schema ] = name.split('.');\n    } else {\n      connection = this.manager.getPool().name;\n      schema = name;\n    }\n\n    let pool = this.manager.getPool(connection);\n    return [ pool.name, pool.getSchema(schema) ];\n  }\n}\n\nmodule.exports = Session;\n","class Space {\n  constructor (fn) {\n    this.fn = fn;\n    this.locks = [];\n    this.done = false;\n  }\n\n  async fetch () {\n    if (!this.done) {\n      await new Promise(async (resolve, reject) => {\n        this.locks.push([ resolve, reject ]);\n\n        if (this.locks.length > 1) {\n          return;\n        }\n\n        try {\n          let { fn } = this;\n          this.value = await fn();\n        } catch (err) {\n          this.error = err;\n        }\n\n        this.done = true;\n        this.locks.splice(0).forEach(([ resolve, reject ]) => {\n          if (this.error) {\n            reject(this.error);\n          } else {\n            resolve(this.value);\n          }\n        });\n      });\n    }\n\n    if (this.error) {\n      throw this.error;\n    }\n\n    return this.value;\n  }\n}\n\nclass Factory {\n  constructor () {\n    this.spaces = new Map();\n  }\n\n  async singleton (key, fn) {\n    fn = fn || key;\n\n    let space;\n    if (this.spaces.has(key)) {\n      space = this.spaces.get(key);\n    } else {\n      space = new Space(fn);\n      this.spaces.set(key, space);\n    }\n\n    return space.fetch(); // return promise\n  }\n}\n\nmodule.exports = Factory;\n","module.exports = {\n  NBoolean: require('./nboolean'),\n  NDatetime: require('./ndatetime'),\n  NDouble: require('./ndouble'),\n  NField: require('./nfield'),\n  NInteger: require('./ninteger'),\n  NReference: require('./nreference'),\n  NString: require('./nstring'),\n  NText: require('./ntext'),\n  NList: require('./nlist'),\n  NMap: require('./nmap'),\n  NBig: require('./nbig'),\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NBoolean extends NField {\n  attach (value) {\n    if (value === undefined || value === null) {\n      return null;\n    }\n\n    if (value === 'false' || value === '0' || value === '') {\n      return false;\n    }\n\n    return Boolean(value);\n  }\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NDouble extends NField {\n  attach (value) {\n    value = super.attach(value);\n    if (value === null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n    if (isNaN(value)) {\n      throw new Error('Invalid double value');\n    }\n\n    return value;\n  }\n\n  compare (criteria, value) {\n    if (value === undefined) {\n      value = null;\n    }\n\n    if (criteria === value) {\n      return 0;\n    }\n\n    if (criteria === null) {\n      return 1;\n    }\n\n    return value - criteria;\n  }\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NInteger extends NField {\n  attach (value) {\n    value = super.attach(value);\n    if (value === null) {\n      return null;\n    }\n\n    value = parseInt(value, 10);\n    if (isNaN(value)) {\n      throw new Error('Invalid integer value');\n    }\n\n    return value;\n  }\n\n  compare (criteria, value) {\n    if (value === undefined) {\n      value = null;\n    }\n\n    if (criteria === value) {\n      return 0;\n    }\n\n    if (criteria === null) {\n      return 1;\n    }\n\n    return value - criteria;\n  }\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NReference extends NField {\n  to (to) {\n    this.to = to;\n\n    return this;\n  }\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NText extends NField {\n\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NList extends NField {\n  of (childField) {\n    this.childField = childField;\n\n    return this;\n  }\n\n  attach (value) {\n    value = super.attach(value);\n    if (value === null) {\n      return null;\n    }\n\n    if (typeof value === 'string') {\n      try {\n        value = JSON.parse(value);\n      } catch (err) {\n        throw new Error('Invalid list value');\n      }\n    }\n\n    if (!Array.isArray(value)) {\n      throw new Error('Invalid list value');\n    }\n\n    if (this.childField) {\n      value = value.map(o => this.childField.attach(o));\n    }\n\n    return value;\n  }\n};\n","const NField = require('./nfield');\n\nmodule.exports = class NMap extends NField {\n  attach (value) {\n    value = super.attach(value);\n    if (value === null) {\n      return null;\n    }\n\n    if (typeof value === 'string') {\n      try {\n        value = JSON.parse(value);\n      } catch (err) {\n        throw new Error('Invalid map value');\n      }\n    }\n\n    if (typeof value !== 'object' || Array.isArray(value)) {\n      throw new Error('Invalid map value');\n    }\n\n    return value;\n  }\n\n  compare (criteria, value) {\n    if (value === undefined) {\n      value = null;\n    }\n\n    if (criteria === value) {\n      return 0;\n    }\n\n    if (criteria === null) {\n      return 1;\n    }\n\n    let criteriaKeys = Object.getOwnPropertyNames(criteria);\n    let valueKeys = Object.getOwnPropertyNames(value);\n\n    if (criteriaKeys.length !== valueKeys.length) {\n      return 1;\n    }\n\n    for (let key of criteriaKeys) {\n      if (!valueKeys.includes(key)) {\n        return 1;\n      }\n\n      if (criteria[key] !== value[key]) {\n        return 1;\n      }\n    }\n\n    return 0;\n  }\n};\n","const NField = require('./nfield');\nconst Big = require('big.js');\n\nmodule.exports = class NBig extends NField {\n  attach (value) {\n    value = super.attach(value);\n\n    if (value === null) {\n      return null;\n    }\n\n    try {\n      return new Big(value);\n    } catch (err) {\n      throw new Error('Invalid big value');\n    }\n  }\n\n  compare (criteria, value) {\n    if (value === undefined) {\n      value = null;\n    }\n\n    if (criteria === value) {\n      return 0;\n    }\n\n    if (criteria === null) {\n      return 1;\n    }\n\n    return new Big(value).cmp(criteria);\n  }\n\n  serialize (value) {\n    if (value === null) {\n      return value;\n    }\n\n    return value.toJSON();\n  }\n};\n","/*\r\n *  big.js v5.2.2\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  https://github.com/MikeMcl/big.js/LICENCE\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,          // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big.\r\n     * (This limit is not enforced or checked.)\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   *\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        parse(x, n);\r\n      }\r\n\r\n      /*\r\n       * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\r\n       * points to Object.\r\n       */\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.version = '5.2.2';\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    // Minus zero?\r\n    if (n === 0 && 1 / n < 0) n = '-0';\r\n    else if (!NUMERIC.test(n += '')) throw Error(INVALID + 'number');\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n   * Called by stringify, P.div, P.round and P.sqrt.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * dp {number} Integer, 0 to MAX_DP inclusive.\r\n   * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, dp, rm, more) {\r\n    var xc = x.c,\r\n      i = x.e + dp + 1;\r\n\r\n    if (i < xc.length) {\r\n      if (rm === 1) {\r\n\r\n        // xc[i] is the digit after the digit that may be rounded up.\r\n        more = xc[i] >= 5;\r\n      } else if (rm === 2) {\r\n        more = xc[i] > 5 || xc[i] == 5 &&\r\n          (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\r\n      } else if (rm === 3) {\r\n        more = more || !!xc[0];\r\n      } else {\r\n        more = false;\r\n        if (rm !== 0) throw Error(INVALID_RM);\r\n      }\r\n\r\n      if (i < 1) {\r\n        xc.length = 1;\r\n\r\n        if (more) {\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          x.e = -dp;\r\n          xc[0] = 1;\r\n        } else {\r\n\r\n          // Zero.\r\n          xc[0] = x.e = 0;\r\n        }\r\n      } else {\r\n\r\n        // Remove any digits after the required decimal places.\r\n        xc.length = i--;\r\n\r\n        // Round up?\r\n        if (more) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up.\r\n          for (; ++xc[i] > 9;) {\r\n            xc[i] = 0;\r\n            if (!i--) {\r\n              ++x.e;\r\n              xc.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; !xc[--i];) xc.pop();\r\n      }\r\n    } else if (rm < 0 || rm > 3 || rm !== ~~rm) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   *\r\n   * x {Big}\r\n   * id? {number} Caller id.\r\n   *         1 toExponential\r\n   *         2 toFixed\r\n   *         3 toPrecision\r\n   *         4 valueOf\r\n   * n? {number|undefined} Caller's argument.\r\n   * k? {number|undefined}\r\n   */\r\n  function stringify(x, id, n, k) {\r\n    var e, s,\r\n      Big = x.constructor,\r\n      z = !x.c[0];\r\n\r\n    if (n !== UNDEFINED) {\r\n      if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\r\n        throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\r\n      }\r\n\r\n      x = new Big(x);\r\n\r\n      // The index of the digit that may be rounded up.\r\n      n = k - x.e;\r\n\r\n      // Round?\r\n      if (x.c.length > ++k) round(x, n, Big.RM);\r\n\r\n      // toFixed: recalculate k as x.e may have changed if value rounded up.\r\n      if (id == 2) k = x.e + n + 1;\r\n\r\n      // Append zeros?\r\n      for (; x.c.length < k;) x.c.push(0);\r\n    }\r\n\r\n    e = x.e;\r\n    s = x.c.join('');\r\n    n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) for (e -= n; e--;) s += '0';\r\n      else if (e < n) s = s.slice(0, e) + '.' + s.slice(e);\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n  */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) return new Big(k * 0);\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      d = dp + (q.e = x.e - y.e) + 1;    // number of digits of the result\r\n\r\n    q.s = k;\r\n    k = d < 0 ? 0 : d;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > d) round(q, dp, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n\r\n      // y is non-zero? x is non-zero? Or both are zero.\r\n      return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\r\n    if (!xc[0] || !yc[0]) return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    a = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (b = 0; a; xc[a] %= 10) b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (b) {\r\n      xc.unshift(b);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (a = xc.length; xc[--a] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor(1),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) throw Error(INVALID + 'exponent');\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded using rounding mode rm\r\n   * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\r\n   * multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   * If rm is not specified, use Big.RM.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n   */\r\n  P.round = function (dp, rm) {\r\n    var Big = this.constructor;\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) throw Error(INVALID_DP);\r\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big(0.5);\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) throw Error(NAME + 'No square root');\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s);\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, Big.DP -= 4, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) return new Big(y.s * 0);\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = (c[j] + b) % 10;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   */\r\n  P.toExponential = function (dp) {\r\n    return stringify(this, 1, dp, dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp) {\r\n    return stringify(this, 2, dp, this.e + dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Integer, 1 to MAX_DP inclusive.\r\n   */\r\n  P.toPrecision = function (sd) {\r\n    return stringify(this, 3, sd, sd - 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toString = function () {\r\n    return stringify(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return stringify(this, 4);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n"],"sourceRoot":""}